{
  "version": 3,
  "sources": ["../../simple-datatables/src/helpers.ts", "../../simple-datatables/node_modules/diff-dom/dist/module.js", "../../simple-datatables/src/virtual_dom.ts", "../../simple-datatables/node_modules/dayjs/dayjs.min.js", "../../simple-datatables/node_modules/dayjs/plugin/customParseFormat.js", "../../simple-datatables/src/date.ts", "../../simple-datatables/src/read_data.ts", "../../simple-datatables/src/rows.ts", "../../simple-datatables/src/columns.ts", "../../simple-datatables/src/column_settings.ts", "../../simple-datatables/src/templates.ts", "../../simple-datatables/src/config.ts", "../../simple-datatables/src/virtual_pager_dom.ts", "../../simple-datatables/src/datatable.ts", "../../simple-datatables/src/convert/csv.ts", "../../simple-datatables/src/convert/json.ts", "../../simple-datatables/src/export/csv.ts", "../../simple-datatables/src/export/json.ts", "../../simple-datatables/src/export/sql.ts", "../../simple-datatables/src/export/txt.ts", "../../simple-datatables/src/editing/config.ts", "../../simple-datatables/src/editing/editor.ts", "../../simple-datatables/src/editing/helpers.ts", "../../simple-datatables/src/column_filter/config.ts", "../../simple-datatables/src/column_filter/column_filter.ts"],
  "sourcesContent": ["import {\n    cellDataType,\n    cellType,\n    columnSettingsType,\n    inputCellType,\n    nodeType,\n    textNodeType\n} from \"./types\"\n\n/**\n * Check is item is object\n */\nexport const isObject = (val: (string | number | boolean | object | null | undefined )) => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check for valid JSON string\n */\nexport const isJson = (str: string) => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch (e) {\n        return !1\n    }\n    return !(null === t || (!Array.isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Create DOM element node\n */\nexport const createElement = (nodeName: string, attrs?: { [key: string]: string}) => {\n    const dom = document.createElement(nodeName)\n    if (attrs && \"object\" == typeof attrs) {\n        for (const attr in attrs) {\n            if (\"html\" === attr) {\n                dom.innerHTML = attrs[attr]\n            } else {\n                dom.setAttribute(attr, attrs[attr])\n            }\n        }\n    }\n    return dom\n}\n\nexport const objToText = (obj: nodeType) => {\n    if ([\"#text\", \"#comment\"].includes(obj.nodeName)) {\n        return (obj as textNodeType).data\n    }\n    if (obj.childNodes) {\n        return obj.childNodes.map((childNode: nodeType) => objToText(childNode)).join(\"\")\n    }\n    return \"\"\n}\n\nexport const cellToText = (obj: inputCellType | cellDataType | null | undefined): string => {\n    if (obj === null || obj === undefined) {\n        return \"\"\n    } else if (obj.hasOwnProperty(\"text\") || obj.hasOwnProperty(\"data\")) {\n        const cell = obj as cellType\n        return cell.text ?? cellToText(cell.data)\n    } else if (obj.hasOwnProperty(\"nodeName\")) {\n        return objToText(obj as nodeType)\n    }\n    return String(obj)\n}\n\n\nexport const escapeText = function(text: string) {\n    return text\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n}\n\n\nexport const visibleToColumnIndex = function(visibleIndex: number, columns: columnSettingsType[]) {\n    let counter = 0\n    let columnIndex = 0\n    while (counter < (visibleIndex+1)) {\n        const columnSettings = columns[columnIndex]\n        if (!columnSettings.hidden) {\n            counter += 1\n        }\n        columnIndex += 1\n    }\n    return columnIndex-1\n}\n\nexport const columnToVisibleIndex = function(columnIndex: number, columns: columnSettingsType[]) {\n    let visibleIndex = columnIndex\n    let counter = 0\n    while (counter < columnIndex) {\n        const columnSettings = columns[counter]\n        if (columnSettings.hidden) {\n            visibleIndex -= 1\n        }\n        counter++\n    }\n    return visibleIndex\n}\n\n/**\n * Converts a [NamedNodeMap](https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap) into a normal object.\n *\n * @param map The `NamedNodeMap` to convert\n */\nexport const namedNodeMapToObject = function(map: NamedNodeMap) {\n    const obj = {}\n    if (map) {\n        for (const attr of map) {\n            obj[attr.name] = attr.value\n        }\n    }\n    return obj\n}\n\n/**\n * Convert class names to a CSS selector. Multiple classes should be separated by spaces.\n * Examples:\n *  - \"my-class\" -> \".my-class\"\n *  - \"my-class second-class\" -> \".my-class.second-class\"\n *\n * @param classNames The class names to convert. Can contain multiple classes separated by spaces.\n */\nexport const classNamesToSelector = (classNames: string) => {\n    if (!classNames) {\n        return null\n    }\n    return classNames.trim().split(\" \").map(className => `.${className}`).join(\"\")\n}\n\n/**\n * Check if the element contains all the classes. Multiple classes should be separated by spaces.\n *\n * @param element The element that will be checked\n * @param classes The classes that must be present in the element. Can contain multiple classes separated by spaces.\n */\nexport const containsClass = (element: Element, classes: string) => {\n    const hasMissingClass = classes?.split(\" \").some(className => !element.classList.contains(className))\n    return !hasMissingClass\n}\n\n/**\n * Join two strings with spaces. Null values are ignored.\n * Examples:\n *  - joinWithSpaces(\"a\", \"b\") -> \"a b\"\n *  - joinWithSpaces(\"a\", null) -> \"a\"\n *  - joinWithSpaces(null, \"b\") -> \"b\"\n *  - joinWithSpaces(\"a\", \"b c\") -> \"a b c\"\n *\n * @param first The first string to join\n * @param second The second string to join\n */\nexport const joinWithSpaces = (first: string | null | undefined, second: string | null | undefined) => {\n    if (first) {\n        if (second) {\n            return `${first} ${second}`\n        }\n        return first\n    } else if (second) {\n        return second\n    }\n    return \"\"\n}\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\n        var arguments$1 = arguments;\n\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments$1[i];\r\n            for (var p in s) { if (Object.prototype.hasOwnProperty.call(s, p)) { t[p] = s[p]; } }\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) { for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) { ar = Array.prototype.slice.call(from, 0, i); }\r\n            ar[i] = from[i];\r\n        }\r\n    } }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar Diff = /** @class */ (function () {\n    function Diff(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        Object.entries(options).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            return (_this[key] = value);\n        });\n    }\n    Diff.prototype.toString = function () {\n        return JSON.stringify(this);\n    };\n    Diff.prototype.setValue = function (aKey, aValue) {\n        this[aKey] = aValue;\n        return this;\n    };\n    return Diff;\n}());\nfunction checkElementType(element) {\n    var arguments$1 = arguments;\n\n    var elementTypeNames = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        elementTypeNames[_i - 1] = arguments$1[_i];\n    }\n    if (typeof element === \"undefined\" || element === null) {\n        return false;\n    }\n    return elementTypeNames.some(function (elementTypeName) {\n        var _a, _b;\n        // We need to check if the specified type is defined\n        // because otherwise instanceof throws an exception.\n        return typeof ((_b = (_a = element === null || element === void 0 ? void 0 : element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b[elementTypeName]) ===\n            \"function\" &&\n            element instanceof\n                element.ownerDocument.defaultView[elementTypeName];\n    });\n}\n\nfunction objToNode(objNode, insideSvg, options) {\n    var node;\n    if (objNode.nodeName === \"#text\") {\n        node = options.document.createTextNode(objNode.data);\n    }\n    else if (objNode.nodeName === \"#comment\") {\n        node = options.document.createComment(objNode.data);\n    }\n    else {\n        if (insideSvg) {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", objNode.nodeName);\n            if (objNode.nodeName === \"foreignObject\") {\n                insideSvg = false;\n            }\n        }\n        else if (objNode.nodeName.toLowerCase() === \"svg\") {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            insideSvg = true;\n        }\n        else {\n            node = options.document.createElement(objNode.nodeName);\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                return node.setAttribute(key, value);\n            });\n        }\n        if (objNode.childNodes) {\n            node = node;\n            objNode.childNodes.forEach(function (childNode) {\n                return node.appendChild(objToNode(childNode, insideSvg, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (objNode.value &&\n                checkElementType(node, \"HTMLButtonElement\", \"HTMLDataElement\", \"HTMLInputElement\", \"HTMLLIElement\", \"HTMLMeterElement\", \"HTMLOptionElement\", \"HTMLProgressElement\", \"HTMLParamElement\")) {\n                node.value = objNode.value;\n            }\n            if (objNode.checked && checkElementType(node, \"HTMLInputElement\")) {\n                node.checked = objNode.checked;\n            }\n            if (objNode.selected &&\n                checkElementType(node, \"HTMLOptionElement\")) {\n                node.selected = objNode.selected;\n            }\n        }\n    }\n    return node;\n}\n\n// ===== Apply a diff =====\nvar getFromRoute = function (node, route) {\n    route = route.slice();\n    while (route.length > 0) {\n        var c = route.splice(0, 1)[0];\n        node = node.childNodes[c];\n    }\n    return node;\n};\nfunction applyDiff(tree, diff, options) {\n    var action = diff[options._const.action];\n    var route = diff[options._const.route];\n    var node;\n    if (![options._const.addElement, options._const.addTextElement].includes(action)) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        node = getFromRoute(tree, route);\n    }\n    var newNode;\n    var reference;\n    var nodeArray;\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preDiffApply(info)) {\n        return true;\n    }\n    switch (action) {\n        case options._const.addAttribute:\n            if (!node || !checkElementType(node, \"Element\")) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value]);\n            break;\n        case options._const.modifyAttribute:\n            if (!node || !checkElementType(node, \"Element\")) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue]);\n            if (checkElementType(node, \"HTMLInputElement\") &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.removeAttribute:\n            if (!node || !checkElementType(node, \"Element\")) {\n                return false;\n            }\n            node.removeAttribute(diff[options._const.name]);\n            break;\n        case options._const.modifyTextElement:\n            if (!node || !checkElementType(node, \"Text\")) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            if (checkElementType(node.parentNode, \"HTMLTextAreaElement\")) {\n                node.parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            if (!node || typeof node.value === \"undefined\") {\n                return false;\n            }\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            if (!node || !checkElementType(node, \"Comment\")) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            break;\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === \"undefined\") {\n                return false;\n            }\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === \"undefined\") {\n                return false;\n            }\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement: {\n            var insideSvg = diff[options._const.newValue].nodeName.toLowerCase() === \"svg\" ||\n                node.parentNode.namespaceURI === \"http://www.w3.org/2000/svg\";\n            node.parentNode.replaceChild(objToNode(diff[options._const.newValue], insideSvg, options), node);\n            break;\n        }\n        case options._const.relocateGroup:\n            nodeArray = __spreadArray([], new Array(diff[options._const.groupLength]), true).map(function () {\n                return node.removeChild(node.childNodes[diff[options._const.from]]);\n            });\n            nodeArray.forEach(function (childNode, index) {\n                if (index === 0) {\n                    reference =\n                        node.childNodes[diff[options._const.to]];\n                }\n                node.insertBefore(childNode, reference || null);\n            });\n            break;\n        case options._const.removeElement:\n            node.parentNode.removeChild(node);\n            break;\n        case options._const.addElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            node = getFromRoute(tree, parentRoute);\n            if (!checkElementType(node, \"Element\")) {\n                return false;\n            }\n            node.insertBefore(objToNode(diff[options._const.element], node.namespaceURI === \"http://www.w3.org/2000/svg\", options), node.childNodes[c] || null);\n            break;\n        }\n        case options._const.removeTextElement: {\n            if (!node || node.nodeType !== 3) {\n                return false;\n            }\n            var parentNode = node.parentNode;\n            parentNode.removeChild(node);\n            if (checkElementType(parentNode, \"HTMLTextAreaElement\")) {\n                parentNode.value = \"\";\n            }\n            break;\n        }\n        case options._const.addTextElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            newNode = options.document.createTextNode(diff[options._const.value]);\n            node = getFromRoute(tree, parentRoute);\n            if (!node.childNodes) {\n                return false;\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null);\n            if (checkElementType(node.parentNode, \"HTMLTextAreaElement\")) {\n                node.parentNode.value = diff[options._const.value];\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    options.postDiffApply({\n        diff: info.diff,\n        node: info.node,\n        newNode: newNode\n    });\n    return true;\n}\nfunction applyDOM(tree, diffs, options) {\n    return diffs.every(function (diff) {\n        return applyDiff(tree, diff, options);\n    });\n}\n\n// ===== Undo a diff =====\nfunction swap(obj, p1, p2) {\n    var tmp = obj[p1];\n    obj[p1] = obj[p2];\n    obj[p2] = tmp;\n}\nfunction undoDiff(tree, diff, options) {\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        default:\n            console.log(\"unknown action\");\n    }\n}\nfunction undoDOM(tree, diffs, options) {\n    diffs = diffs.slice();\n    diffs.reverse();\n    diffs.forEach(function (diff) {\n        undoDiff(tree, diff, options);\n    });\n}\n\nvar elementDescriptors = function (el) {\n    var output = [];\n    output.push(el.nodeName);\n    if (el.nodeName !== \"#text\" && el.nodeName !== \"#comment\") {\n        el = el;\n        if (el.attributes) {\n            if (el.attributes[\"class\"]) {\n                output.push(\"\".concat(el.nodeName, \".\").concat(el.attributes[\"class\"].replace(/ /g, \".\")));\n            }\n            if (el.attributes.id) {\n                output.push(\"\".concat(el.nodeName, \"#\").concat(el.attributes.id));\n            }\n        }\n    }\n    return output;\n};\nvar findUniqueDescriptors = function (li) {\n    var uniqueDescriptors = {};\n    var duplicateDescriptors = {};\n    li.forEach(function (node) {\n        elementDescriptors(node).forEach(function (descriptor) {\n            var inUnique = descriptor in uniqueDescriptors;\n            var inDupes = descriptor in duplicateDescriptors;\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true;\n            }\n            else if (inUnique) {\n                delete uniqueDescriptors[descriptor];\n                duplicateDescriptors[descriptor] = true;\n            }\n        });\n    });\n    return uniqueDescriptors;\n};\nvar uniqueInBoth = function (l1, l2) {\n    var l1Unique = findUniqueDescriptors(l1);\n    var l2Unique = findUniqueDescriptors(l2);\n    var inBoth = {};\n    Object.keys(l1Unique).forEach(function (key) {\n        if (l2Unique[key]) {\n            inBoth[key] = true;\n        }\n    });\n    return inBoth;\n};\nvar removeDone = function (tree) {\n    delete tree.outerDone;\n    delete tree.innerDone;\n    delete tree.valueDone;\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone);\n    }\n    else {\n        return true;\n    }\n};\nvar cleanNode = function (diffNode) {\n    if (Object.prototype.hasOwnProperty.call(diffNode, \"data\")) {\n        var textNode = {\n            nodeName: diffNode.nodeName === \"#text\" ? \"#text\" : \"#comment\",\n            data: diffNode.data\n        };\n        return textNode;\n    }\n    else {\n        var elementNode = {\n            nodeName: diffNode.nodeName\n        };\n        diffNode = diffNode;\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"attributes\")) {\n            elementNode.attributes = __assign({}, diffNode.attributes);\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"checked\")) {\n            elementNode.checked = diffNode.checked;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"value\")) {\n            elementNode.value = diffNode.value;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"selected\")) {\n            elementNode.selected = diffNode.selected;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"childNodes\")) {\n            elementNode.childNodes = diffNode.childNodes.map(function (diffChildNode) {\n                return cleanNode(diffChildNode);\n            });\n        }\n        return elementNode;\n    }\n};\nvar isEqual = function (e1, e2) {\n    if (![\"nodeName\", \"value\", \"checked\", \"selected\", \"data\"].every(function (element) {\n        if (e1[element] !== e2[element]) {\n            return false;\n        }\n        return true;\n    })) {\n        return false;\n    }\n    if (Object.prototype.hasOwnProperty.call(e1, \"data\")) {\n        // Comment or Text\n        return true;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false;\n    }\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false;\n    }\n    if (e1.attributes) {\n        var e1Attributes = Object.keys(e1.attributes);\n        var e2Attributes = Object.keys(e2.attributes);\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false;\n        }\n        if (!e1Attributes.every(function (attribute) {\n            if (e1.attributes[attribute] !==\n                e2.attributes[attribute]) {\n                return false;\n            }\n            return true;\n        })) {\n            return false;\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false;\n        }\n        if (!e1.childNodes.every(function (childNode, index) {\n            return isEqual(childNode, e2.childNodes[index]);\n        })) {\n            return false;\n        }\n    }\n    return true;\n};\nvar roughlyEqual = function (e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n    if (preventRecursion === void 0) { preventRecursion = false; }\n    if (!e1 || !e2) {\n        return false;\n    }\n    if (e1.nodeName !== e2.nodeName) {\n        return false;\n    }\n    if ([\"#text\", \"#comment\"].includes(e1.nodeName)) {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion\n            ? true\n            : e1.data === e2.data;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (e1.nodeName in uniqueDescriptors) {\n        return true;\n    }\n    if (e1.attributes && e2.attributes) {\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false;\n            }\n            else {\n                var idDescriptor = \"\".concat(e1.nodeName, \"#\").concat(e1.attributes.id);\n                if (idDescriptor in uniqueDescriptors) {\n                    return true;\n                }\n            }\n        }\n        if (e1.attributes[\"class\"] &&\n            e1.attributes[\"class\"] === e2.attributes[\"class\"]) {\n            var classDescriptor = \"\".concat(e1.nodeName, \".\").concat(e1.attributes[\"class\"].replace(/ /g, \".\"));\n            if (classDescriptor in uniqueDescriptors) {\n                return true;\n            }\n        }\n    }\n    if (sameSiblings) {\n        return true;\n    }\n    var nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : [];\n    var nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : [];\n    if (nodeList1.length !== nodeList2.length) {\n        return false;\n    }\n    if (preventRecursion) {\n        return nodeList1.every(function (element, index) {\n            return element.nodeName === nodeList2[index].nodeName;\n        });\n    }\n    else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        var childUniqueDescriptors_1 = uniqueInBoth(nodeList1, nodeList2);\n        return nodeList1.every(function (element, index) {\n            return roughlyEqual(element, nodeList2[index], childUniqueDescriptors_1, true, true);\n        });\n    }\n};\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nvar findCommonSubsets = function (c1, c2, marked1, marked2) {\n    var lcsSize = 0;\n    var index = [];\n    var c1Length = c1.length;\n    var c2Length = c2.length;\n    var // set up the matching table\n    matches = __spreadArray([], new Array(c1Length + 1), true).map(function () { return []; });\n    var uniqueDescriptors = uniqueInBoth(c1, c2);\n    var // If all of the elements are the same tag, id and class, then we can\n    // consider them roughly the same even if they have a different number of\n    // children. This will reduce removing and re-adding similar elements.\n    subsetsSame = c1Length === c2Length;\n    if (subsetsSame) {\n        c1.some(function (element, i) {\n            var c1Desc = elementDescriptors(element);\n            var c2Desc = elementDescriptors(c2[i]);\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false;\n                return true;\n            }\n            c1Desc.some(function (description, i) {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false;\n                    return true;\n                }\n            });\n            if (!subsetsSame) {\n                return true;\n            }\n        });\n    }\n    // fill the matches with distance values\n    for (var c1Index = 0; c1Index < c1Length; c1Index++) {\n        var c1Element = c1[c1Index];\n        for (var c2Index = 0; c2Index < c2Length; c2Index++) {\n            var c2Element = c2[c2Index];\n            if (!marked1[c1Index] &&\n                !marked2[c2Index] &&\n                roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = matches[c1Index][c2Index]\n                    ? matches[c1Index][c2Index] + 1\n                    : 1;\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1];\n                    index = [c1Index + 1, c2Index + 1];\n                }\n            }\n            else {\n                matches[c1Index + 1][c2Index + 1] = 0;\n            }\n        }\n    }\n    if (lcsSize === 0) {\n        return false;\n    }\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    };\n};\nvar makeBooleanArray = function (n, v) {\n    return __spreadArray([], new Array(n), true).map(function () { return v; });\n};\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nvar getGapInformation = function (t1, t2, stable) {\n    var gaps1 = t1.childNodes\n        ? makeBooleanArray(t1.childNodes.length, true)\n        : [];\n    var gaps2 = t2.childNodes\n        ? makeBooleanArray(t2.childNodes.length, true)\n        : [];\n    var group = 0;\n    // give elements from the same subset the same group number\n    stable.forEach(function (subset) {\n        var endOld = subset.oldValue + subset.length;\n        var endNew = subset.newValue + subset.length;\n        for (var j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group;\n        }\n        for (var j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group;\n        }\n        group += 1;\n    });\n    return {\n        gaps1: gaps1,\n        gaps2: gaps2\n    };\n};\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nvar markBoth = function (marked1, marked2, subset, i) {\n    marked1[subset.oldValue + i] = true;\n    marked2[subset.newValue + i] = true;\n};\nvar markSubTrees = function (oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    var oldChildren = oldTree.childNodes ? oldTree.childNodes : [];\n    var newChildren = newTree.childNodes ? newTree.childNodes : [];\n    var marked1 = makeBooleanArray(oldChildren.length, false);\n    var marked2 = makeBooleanArray(newChildren.length, false);\n    var subsets = [];\n    var returnIndex = function () {\n        return arguments[1];\n    };\n    var foundAllSubsets = false;\n    var _loop_1 = function () {\n        var subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2);\n        if (subset) {\n            subsets.push(subset);\n            var subsetArray = __spreadArray([], new Array(subset.length), true).map(returnIndex);\n            subsetArray.forEach(function (item) {\n                return markBoth(marked1, marked2, subset, item);\n            });\n        }\n        else {\n            foundAllSubsets = true;\n        }\n    };\n    while (!foundAllSubsets) {\n        _loop_1();\n    }\n    oldTree.subsets = subsets;\n    oldTree.subsetsAge = 100;\n    return subsets;\n};\nvar DiffTracker = /** @class */ (function () {\n    function DiffTracker() {\n        this.list = [];\n    }\n    DiffTracker.prototype.add = function (diffs) {\n        var _a;\n        (_a = this.list).push.apply(_a, diffs);\n    };\n    DiffTracker.prototype.forEach = function (fn) {\n        this.list.forEach(function (li) { return fn(li); });\n    };\n    return DiffTracker;\n}());\n\n// ===== Apply a virtual diff =====\nfunction getFromVirtualRoute(tree, route) {\n    var node = tree;\n    var parentNode;\n    var nodeIndex;\n    route = route.slice();\n    while (route.length > 0) {\n        nodeIndex = route.splice(0, 1)[0];\n        parentNode = node;\n        node = node.childNodes ? node.childNodes[nodeIndex] : undefined;\n    }\n    return {\n        node: node,\n        parentNode: parentNode,\n        nodeIndex: nodeIndex\n    };\n}\nfunction applyVirtualDiff(tree, diff, options) {\n    var _a;\n    var node, parentNode, nodeIndex;\n    if (![options._const.addElement, options._const.addTextElement].includes(diff[options._const.action])) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        var routeInfo = getFromVirtualRoute(tree, diff[options._const.route]);\n        node = routeInfo.node;\n        parentNode = routeInfo.parentNode;\n        nodeIndex = routeInfo.nodeIndex;\n    }\n    var newSubsets = [];\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preVirtualDiffApply(info)) {\n        return true;\n    }\n    var newNode;\n    var nodeArray;\n    var route;\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {};\n            }\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.value];\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = true;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                node.selected = true;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.value];\n            }\n            break;\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.newValue];\n            break;\n        case options._const.removeAttribute:\n            delete node.attributes[diff[options._const.name]];\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes;\n            }\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = false;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                delete node.selected;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                delete node.value;\n            }\n            break;\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue];\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue];\n            break;\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement:\n            newNode = cleanNode(diff[options._const.newValue]);\n            parentNode.childNodes[nodeIndex] = newNode;\n            break;\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes\n                .splice(diff[options._const.from], diff[options._const.groupLength])\n                .reverse();\n            nodeArray.forEach(function (movedNode) {\n                return node.childNodes.splice(diff[options._const.to], 0, movedNode);\n            });\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (diff[options._const.from] < diff[options._const.to] &&\n                        map.oldValue <= diff[options._const.to] &&\n                        map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (diff[options._const.from] > diff[options._const.to] &&\n                        map.oldValue > diff[options._const.to] &&\n                        map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to];\n                    }\n                });\n            }\n            break;\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addElement: {\n            route = diff[options._const.route].slice();\n            var c_1 = route.splice(route.length - 1, 1)[0];\n            node = (_a = getFromVirtualRoute(tree, route)) === null || _a === void 0 ? void 0 : _a.node;\n            newNode = cleanNode(diff[options._const.element]);\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_1 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_1, 0, newNode);\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_1) {\n                        map.oldValue += 1;\n                    }\n                    else if (map.oldValue < c_1 &&\n                        map.oldValue + map.length > c_1) {\n                        var splitLength = map.oldValue + map.length - c_1;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_1 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                delete parentNode.value;\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addTextElement: {\n            route = diff[options._const.route].slice();\n            var c_2 = route.splice(route.length - 1, 1)[0];\n            newNode = {\n                nodeName: \"#text\",\n                data: diff[options._const.value]\n            };\n            node = getFromVirtualRoute(tree, route).node;\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_2 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_2, 0, newNode);\n            }\n            if (node.nodeName === \"TEXTAREA\") {\n                node.value = diff[options._const.newValue];\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_2) {\n                        map.oldValue += 1;\n                    }\n                    if (map.oldValue < c_2 && map.oldValue + map.length > c_2) {\n                        var splitLength = map.oldValue + map.length - c_2;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_2 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(function (map) { return !map[\"delete\"] && map.oldValue !== map.newValue; });\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets);\n        }\n    }\n    options.postVirtualDiffApply({\n        node: info.node,\n        diff: info.diff,\n        newNode: newNode\n    });\n    return;\n}\nfunction applyVirtual(tree, diffs, options) {\n    diffs.forEach(function (diff) {\n        applyVirtualDiff(tree, diff, options);\n    });\n    return true;\n}\n\nfunction nodeToObj(aNode, options) {\n    if (options === void 0) { options = { valueDiffing: true }; }\n    var objNode = {\n        nodeName: aNode.nodeName\n    };\n    if (checkElementType(aNode, \"Text\", \"Comment\")) {\n        objNode.data = aNode.data;\n    }\n    else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {};\n            var nodeArray = Array.prototype.slice.call(aNode.attributes);\n            nodeArray.forEach(function (attribute) {\n                return (objNode.attributes[attribute.name] = attribute.value);\n            });\n        }\n        if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = [];\n            var nodeArray = Array.prototype.slice.call(aNode.childNodes);\n            nodeArray.forEach(function (childNode) {\n                return objNode.childNodes.push(nodeToObj(childNode, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (checkElementType(aNode, \"HTMLTextAreaElement\")) {\n                objNode.value = aNode.value;\n            }\n            if (checkElementType(aNode, \"HTMLInputElement\") &&\n                [\"radio\", \"checkbox\"].includes(aNode.type.toLowerCase()) &&\n                aNode.checked !== undefined) {\n                objNode.checked = aNode.checked;\n            }\n            else if (checkElementType(aNode, \"HTMLButtonElement\", \"HTMLDataElement\", \"HTMLInputElement\", \"HTMLLIElement\", \"HTMLMeterElement\", \"HTMLOptionElement\", \"HTMLProgressElement\", \"HTMLParamElement\")) {\n                objNode.value = aNode.value;\n            }\n            if (checkElementType(aNode, \"HTMLOptionElement\")) {\n                objNode.selected = aNode.selected;\n            }\n        }\n    }\n    return objNode;\n}\n\n// from html-parse-stringify (MIT)\nvar tagRE = /<\\s*\\/*[a-zA-Z:_][a-zA-Z0-9:_\\-.]*\\s*(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\"/>])*\\/*\\s*>|<!--(?:.|\\n|\\r)*?-->/g;\nvar attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\nfunction unescape(string) {\n    return string\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\");\n}\n// create optimized lookup object for\n// void elements as listed here:\n// https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nvar lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nvar parseTag = function (tag, caseSensitive) {\n    var res = {\n        nodeName: \"\",\n        attributes: {}\n    };\n    var voidElement = false;\n    var type = \"tag\";\n    var tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n    if (tagMatch) {\n        res.nodeName =\n            caseSensitive || tagMatch[1] === \"svg\"\n                ? tagMatch[1]\n                : tagMatch[1].toUpperCase();\n        if (lookup[tagMatch[1]] || tag.charAt(tag.length - 2) === \"/\") {\n            voidElement = true;\n        }\n        // handle comment tag\n        if (res.nodeName.startsWith(\"!--\")) {\n            var endIndex = tag.indexOf(\"-->\");\n            return {\n                type: \"comment\",\n                node: {\n                    nodeName: \"#comment\",\n                    data: endIndex !== -1 ? tag.slice(4, endIndex) : \"\"\n                },\n                voidElement: voidElement\n            };\n        }\n    }\n    var reg = new RegExp(attrRE);\n    var result = null;\n    var done = false;\n    while (!done) {\n        result = reg.exec(tag);\n        if (result === null) {\n            done = true;\n        }\n        else if (result[0].trim()) {\n            if (result[1]) {\n                var attr = result[1].trim();\n                var arr = [attr, \"\"];\n                if (attr.indexOf(\"=\") > -1)\n                    { arr = attr.split(\"=\"); }\n                res.attributes[arr[0]] = arr[1];\n                reg.lastIndex--;\n            }\n            else if (result[2])\n                { res.attributes[result[2]] = result[3]\n                    .trim()\n                    .substring(1, result[3].length - 1); }\n        }\n    }\n    return {\n        type: type,\n        node: res,\n        voidElement: voidElement\n    };\n};\nvar stringToObj = function (html, options) {\n    if (options === void 0) { options = {\n        valueDiffing: true,\n        caseSensitive: false\n    }; }\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var inComponent = false, insideSvg = false;\n    // handle text at top level\n    if (html.indexOf(\"<\") !== 0) {\n        var end = html.indexOf(\"<\");\n        result.push({\n            nodeName: \"#text\",\n            data: end === -1 ? html : html.substring(0, end)\n        });\n    }\n    html.replace(tagRE, function (tag, index) {\n        var isOpen = tag.charAt(1) !== \"/\";\n        var isComment = tag.startsWith(\"<!--\");\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        if (isComment) {\n            var comment = parseTag(tag, options.caseSensitive).node;\n            // if we're at root, push new base node\n            if (level < 0) {\n                result.push(comment);\n                return \"\";\n            }\n            var parent_1 = arr[level];\n            if (parent_1 && comment.nodeName) {\n                if (!parent_1.node.childNodes) {\n                    parent_1.node.childNodes = [];\n                }\n                parent_1.node.childNodes.push(comment);\n            }\n            return \"\";\n        }\n        if (isOpen) {\n            current = parseTag(tag, options.caseSensitive || insideSvg);\n            if (current.node.nodeName === \"svg\") {\n                insideSvg = true;\n            }\n            level++;\n            if (!current.voidElement &&\n                !inComponent &&\n                nextChar &&\n                nextChar !== \"<\") {\n                if (!current.node.childNodes) {\n                    current.node.childNodes = [];\n                }\n                var data = unescape(html.slice(start, html.indexOf(\"<\", start)));\n                current.node.childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n                if (options.valueDiffing &&\n                    current.node.nodeName === \"TEXTAREA\") {\n                    current.node.value = data;\n                }\n            }\n            // if we're at root, push new base node\n            if (level === 0 && current.node.nodeName) {\n                result.push(current.node);\n            }\n            var parent_2 = arr[level - 1];\n            if (parent_2 && current.node.nodeName) {\n                if (!parent_2.node.childNodes) {\n                    parent_2.node.childNodes = [];\n                }\n                parent_2.node.childNodes.push(current.node);\n            }\n            arr[level] = current;\n        }\n        if (!isOpen || current.voidElement) {\n            if (level > -1 &&\n                (current.voidElement ||\n                    (options.caseSensitive &&\n                        current.node.nodeName === tag.slice(2, -1)) ||\n                    (!options.caseSensitive &&\n                        current.node.nodeName.toUpperCase() ===\n                            tag.slice(2, -1).toUpperCase()))) {\n                level--;\n                // move current up a level to match the end tag\n                if (level > -1) {\n                    if (current.node.nodeName === \"svg\") {\n                        insideSvg = false;\n                    }\n                    current = arr[level];\n                }\n            }\n            if (nextChar !== \"<\" && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                var childNodes = level === -1 ? result : arr[level].node.childNodes || [];\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                var end = html.indexOf(\"<\", start);\n                var data = unescape(html.slice(start, end === -1 ? undefined : end));\n                childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n            }\n        }\n        return \"\";\n    });\n    return result[0];\n};\n\n// ===== Create a diff =====\nvar DiffFinder = /** @class */ (function () {\n    function DiffFinder(t1Node, t2Node, options) {\n        this.options = options;\n        this.t1 = (typeof Element !== \"undefined\" &&\n            checkElementType(t1Node, \"Element\")\n            ? nodeToObj(t1Node, this.options)\n            : typeof t1Node === \"string\"\n                ? stringToObj(t1Node, this.options)\n                : JSON.parse(JSON.stringify(t1Node)));\n        this.t2 = (typeof Element !== \"undefined\" &&\n            checkElementType(t2Node, \"Element\")\n            ? nodeToObj(t2Node, this.options)\n            : typeof t2Node === \"string\"\n                ? stringToObj(t2Node, this.options)\n                : JSON.parse(JSON.stringify(t2Node)));\n        this.diffcount = 0;\n        this.foundAll = false;\n        if (this.debug) {\n            this.t1Orig =\n                typeof Element !== \"undefined\" &&\n                    checkElementType(t1Node, \"Element\")\n                    ? nodeToObj(t1Node, this.options)\n                    : typeof t1Node === \"string\"\n                        ? stringToObj(t1Node, this.options)\n                        : JSON.parse(JSON.stringify(t1Node));\n            this.t2Orig =\n                typeof Element !== \"undefined\" &&\n                    checkElementType(t2Node, \"Element\")\n                    ? nodeToObj(t2Node, this.options)\n                    : typeof t2Node === \"string\"\n                        ? stringToObj(t2Node, this.options)\n                        : JSON.parse(JSON.stringify(t2Node));\n        }\n        this.tracker = new DiffTracker();\n    }\n    DiffFinder.prototype.init = function () {\n        return this.findDiffs(this.t1, this.t2);\n    };\n    DiffFinder.prototype.findDiffs = function (t1, t2) {\n        var diffs;\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1;\n                if (this.diffcount > this.options.diffcap) {\n                    throw new Error(\"surpassed diffcap:\".concat(JSON.stringify(this.t1Orig), \" -> \").concat(JSON.stringify(this.t2Orig)));\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, []);\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error(\"Could not find remaining diffs!\");\n                    }\n                    else {\n                        this.foundAll = true;\n                        removeDone(t1);\n                        diffs = this.findNextDiff(t1, t2, []);\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false;\n                this.tracker.add(diffs);\n                applyVirtual(t1, diffs, this.options);\n            }\n        } while (diffs.length > 0);\n        return this.tracker.list;\n    };\n    DiffFinder.prototype.findNextDiff = function (t1, t2, route) {\n        var diffs;\n        var fdiffs;\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return [];\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route);\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs);\n                if (fdiffs)\n                    { diffs = fdiffs; }\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true;\n                return diffs;\n            }\n            else {\n                t1.outerDone = true;\n            }\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\")) {\n            // Comment or Text\n            return [];\n        }\n        t1 = t1;\n        t2 = t2;\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                return diffs;\n            }\n            else {\n                t1.innerDone = true;\n            }\n        }\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                t1.valueDone = true;\n                return diffs;\n            }\n            else {\n                t1.valueDone = true;\n            }\n        }\n        // no differences\n        return [];\n    };\n    DiffFinder.prototype.findOuterDiff = function (t1, t2, route) {\n        var diffs = [];\n        var attr;\n        var attr1;\n        var attr2;\n        var attrLength;\n        var pos;\n        var i;\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error(\"Top level nodes have to be of the same kind.\");\n            }\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (route.length &&\n            this.options.diffcap <\n                Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\") &&\n            t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === \"#text\") {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n            else {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyComment)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n        }\n        t1 = t1;\n        t2 = t2;\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : [];\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : [];\n        attrLength = attr1.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i];\n            pos = attr2.indexOf(attr);\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr]));\n            }\n            else {\n                attr2.splice(pos, 1);\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr]));\n                }\n            }\n        }\n        attrLength = attr2.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i];\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr]));\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findInnerDiff = function (t1, t2, route) {\n        var t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : [];\n        var t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : [];\n        var last = Math.max(t1ChildNodes.length, t2ChildNodes.length);\n        var childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length);\n        var diffs = [];\n        var index = 0;\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            var cachedSubtrees = Boolean(t1.subsets && t1.subsetsAge--);\n            var subtrees = cachedSubtrees\n                ? t1.subsets\n                : t1.childNodes && t2.childNodes\n                    ? markSubTrees(t1, t2)\n                    : [];\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees);\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n            }\n        }\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n        for (var i = 0; i < last; i += 1) {\n            var e1 = t1ChildNodes[i];\n            var e2 = t2ChildNodes[i];\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data));\n                        index -= 1;\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e1)));\n                        index -= 1;\n                    }\n                }\n                else if (e2 && !e1) {\n                    if (e2.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data));\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e2)));\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n            if (e1 && e2) {\n                if (!this.options.maxChildCount ||\n                    last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)));\n                }\n                else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        if (e1.nodeName === \"#text\") {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeTextElement)\n                                .setValue(this.options._const.route, route.concat(index))\n                                .setValue(this.options._const.value, e1.data));\n                        }\n                        else {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeElement)\n                                .setValue(this.options._const.element, cleanNode(e1))\n                                .setValue(this.options._const.route, route.concat(index)));\n                        }\n                        t1ChildNodes.splice(i, 1);\n                        i -= 1;\n                        index -= 1;\n                        childNodesLengthDifference -= 1;\n                    }\n                    else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cleanNode(e2))\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                        t1ChildNodes.splice(i, 0, cleanNode(e2));\n                        childNodesLengthDifference -= 1;\n                    }\n                    else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cleanNode(e1))\n                                .setValue(this.options._const.newValue, cleanNode(e2))\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                    }\n                }\n            }\n            index += 1;\n        }\n        t1.innerDone = true;\n        return diffs;\n    };\n    DiffFinder.prototype.attemptGroupRelocation = function (t1, t2, subtrees, route, cachedSubtrees) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        var gapInformation = getGapInformation(t1, t2, subtrees);\n        var gaps1 = gapInformation.gaps1;\n        var gaps2 = gapInformation.gaps2;\n        var t1ChildNodes = t1.childNodes.slice();\n        var t2ChildNodes = t2.childNodes.slice();\n        var shortest = Math.min(gaps1.length, gaps2.length);\n        var destinationDifferent;\n        var toGroup;\n        var group;\n        var node;\n        var similarNode;\n        var diffs = [];\n        for (var index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (cachedSubtrees &&\n                (gaps1[index2] === true || gaps2[index2] === true)) ;\n            else if (gaps1[index1] === true) {\n                node = t1ChildNodes[index1];\n                if (node.nodeName === \"#text\") {\n                    if (t2ChildNodes[index2].nodeName === \"#text\") {\n                        if (node.data !==\n                            t2ChildNodes[index2].data) {\n                            // Check whether a text node with the same value follows later on.\n                            var testI = index1;\n                            while (t1ChildNodes.length > testI + 1 &&\n                                t1ChildNodes[testI + 1].nodeName === \"#text\") {\n                                testI += 1;\n                                if (t2ChildNodes[index2]\n                                    .data ===\n                                    t1ChildNodes[testI]\n                                        .data) {\n                                    similarNode = true;\n                                    break;\n                                }\n                            }\n                            if (!similarNode) {\n                                diffs.push(new Diff()\n                                    .setValue(this.options._const.action, this.options._const\n                                    .modifyTextElement)\n                                    .setValue(this.options._const.route, route.concat(index1))\n                                    .setValue(this.options._const.oldValue, node.data)\n                                    .setValue(this.options._const.newValue, t2ChildNodes[index2].data));\n                            }\n                        }\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index1))\n                            .setValue(this.options._const.value, node.data));\n                        gaps1.splice(index1, 1);\n                        t1ChildNodes.splice(index1, 1);\n                        shortest = Math.min(gaps1.length, gaps2.length);\n                        index1 -= 1;\n                        index2 -= 1;\n                    }\n                }\n                else if (gaps2[index2] === true) {\n                    // both gaps1[index1] and gaps2[index2]  are true.\n                    // We replace one element with another.\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.replaceElement)\n                        .setValue(this.options._const.oldValue, cleanNode(node))\n                        .setValue(this.options._const.newValue, cleanNode(t2ChildNodes[index2]))\n                        .setValue(this.options._const.route, route.concat(index1)));\n                    // t1ChildNodes at position index1 is not up-to-date, but that does not matter as\n                    // index1 will increase +1\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index1, 1);\n                    t1ChildNodes.splice(index1, 1);\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    index1 -= 1;\n                    index2 -= 1;\n                }\n            }\n            else if (gaps2[index2] === true) {\n                node = t2ChildNodes[index2];\n                if (node.nodeName === \"#text\") {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.value, node.data));\n                    gaps1.splice(index1, 0, true);\n                    t1ChildNodes.splice(index1, 0, {\n                        nodeName: \"#text\",\n                        data: node.data\n                    });\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    //index1 += 1\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index1, 0, true);\n                    t1ChildNodes.splice(index1, 0, cleanNode(node));\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    //index1 += 1\n                }\n            }\n            else if (gaps1[index1] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n                // group relocation\n                group = subtrees[gaps1[index1]];\n                toGroup = Math.min(group.newValue, t1ChildNodes.length - group.length);\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false;\n                    for (var j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1ChildNodes[toGroup + j], t1ChildNodes[group.oldValue + j], {}, false, true)) {\n                            destinationDifferent = true;\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.relocateGroup)\n                                .setValue(this.options._const.groupLength, group.length)\n                                .setValue(this.options._const.from, group.oldValue)\n                                .setValue(this.options._const.to, toGroup)\n                                .setValue(this.options._const.route, route) ];\n                    }\n                }\n            }\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findValueDiff = function (t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        var diffs = [];\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route));\n        }\n        if ((t1.value || t2.value) &&\n            t1.value !== t2.value &&\n            t1.nodeName !== \"OPTION\") {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route));\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route));\n        }\n        return diffs;\n    };\n    return DiffFinder;\n}());\n\nvar DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10,\n    maxDepth: false,\n    maxChildCount: 50,\n    valueDiffing: true,\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff: function (node, currentValue, expectedValue, newValue) {\n        node.data = newValue;\n        return;\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply: function () { },\n    postVirtualDiffApply: function () { },\n    preDiffApply: function () { },\n    postDiffApply: function () { },\n    filterOuterDiff: null,\n    compress: false,\n    _const: false,\n    document: typeof window !== \"undefined\" && window.document\n        ? window.document\n        : false,\n    components: []\n};\nvar DiffDOM = /** @class */ (function () {\n    function DiffDOM(options) {\n        if (options === void 0) { options = {}; }\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            if (!Object.prototype.hasOwnProperty.call(options, key)) {\n                options[key] = value;\n            }\n        });\n        if (!options._const) {\n            var varNames = [\n                \"addAttribute\",\n                \"modifyAttribute\",\n                \"removeAttribute\",\n                \"modifyTextElement\",\n                \"relocateGroup\",\n                \"removeElement\",\n                \"addElement\",\n                \"removeTextElement\",\n                \"addTextElement\",\n                \"replaceElement\",\n                \"modifyValue\",\n                \"modifyChecked\",\n                \"modifySelected\",\n                \"modifyComment\",\n                \"action\",\n                \"route\",\n                \"oldValue\",\n                \"newValue\",\n                \"element\",\n                \"group\",\n                \"groupLength\",\n                \"from\",\n                \"to\",\n                \"name\",\n                \"value\",\n                \"data\",\n                \"attributes\",\n                \"nodeName\",\n                \"childNodes\",\n                \"checked\",\n                \"selected\" ];\n            var constNames_1 = {};\n            if (options.compress) {\n                varNames.forEach(function (varName, index) { return (constNames_1[varName] = index); });\n            }\n            else {\n                varNames.forEach(function (varName) { return (constNames_1[varName] = varName); });\n            }\n            options._const = constNames_1;\n        }\n        this.options = options;\n    }\n    DiffDOM.prototype.apply = function (tree, diffs) {\n        return applyDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.undo = function (tree, diffs) {\n        return undoDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.diff = function (t1Node, t2Node) {\n        var finder = new DiffFinder(t1Node, t2Node, this.options);\n        return finder.init();\n    };\n    return DiffDOM;\n}());\n\n/**\n * Use TraceLogger to figure out function calls inside\n * JS objects by wrapping an object with a TraceLogger\n * instance.\n *\n * Pretty-prints the call trace (using unicode box code)\n * when tracelogger.toString() is called.\n */\n/**\n * Wrap an object by calling new TraceLogger(obj)\n *\n * If you're familiar with Python decorators, this\n * does roughly the same thing, adding pre/post\n * call hook logging calls so that you can see\n * what's going on.\n */\nvar TraceLogger = /** @class */ (function () {\n    function TraceLogger(obj) {\n        if (obj === void 0) { obj = {}; }\n        var _this = this;\n        this.pad = \"│   \";\n        this.padding = \"\";\n        this.tick = 1;\n        this.messages = [];\n        var wrapkey = function (obj, key) {\n            // trace this function\n            var oldfn = obj[key];\n            obj[key] = function () {\n                var arguments$1 = arguments;\n\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments$1[_i];\n                }\n                _this.fin(key, Array.prototype.slice.call(args));\n                var result = oldfn.apply(obj, args);\n                _this.fout(key, result);\n                return result;\n            };\n        };\n        // can't use Object.keys for prototype walking\n        for (var key in obj) {\n            if (typeof obj[key] === \"function\") {\n                wrapkey(obj, key);\n            }\n        }\n        this.log(\"┌ TRACELOG START\");\n    }\n    // called when entering a function\n    TraceLogger.prototype.fin = function (fn, args) {\n        this.padding += this.pad;\n        this.log(\"\\u251C\\u2500> entering \".concat(fn), args);\n    };\n    // called when exiting a function\n    TraceLogger.prototype.fout = function (fn, result) {\n        this.log(\"│<──┘ generated return value\", result);\n        this.padding = this.padding.substring(0, this.padding.length - this.pad.length);\n    };\n    // log message formatting\n    TraceLogger.prototype.format = function (s, tick) {\n        var nf = function (t) {\n            var tStr = \"\".concat(t);\n            while (tStr.length < 4) {\n                tStr = \"0\".concat(t);\n            }\n            return tStr;\n        };\n        return \"\".concat(nf(tick), \"> \").concat(this.padding).concat(s);\n    };\n    // log a trace message\n    TraceLogger.prototype.log = function () {\n        var arguments$1 = arguments;\n\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments$1[_i];\n        }\n        var stringCollapse = function (v) {\n            if (!v) {\n                return \"<falsey>\";\n            }\n            if (typeof v === \"string\") {\n                return v;\n            }\n            if (checkElementType(v, \"HTMLElement\")) {\n                return v.outerHTML || \"<empty>\";\n            }\n            if (v instanceof Array) {\n                return \"[\".concat(v.map(stringCollapse).join(\",\"), \"]\");\n            }\n            return v.toString() || v.valueOf() || \"<unknown>\";\n        };\n        var s = args.map(stringCollapse).join(\", \");\n        this.messages.push(this.format(s, this.tick++));\n    };\n    // turn the log into a structured string with\n    // unicode box codes to make it a sensible trace.\n    TraceLogger.prototype.toString = function () {\n        var cap = \"×   \";\n        var terminator = \"└───\";\n        while (terminator.length <= this.padding.length + this.pad.length) {\n            terminator += cap;\n        }\n        var _ = this.padding;\n        this.padding = \"\";\n        terminator = this.format(terminator, this.tick);\n        this.padding = _;\n        return \"\".concat(this.messages.join(\"\\n\"), \"\\n\").concat(terminator);\n    };\n    return TraceLogger;\n}());\n\nexport { DiffDOM, TraceLogger, nodeToObj, stringToObj };\n//# sourceMappingURL=module.js.map\n", "import {stringToObj} from \"diff-dom\"\n\nimport {cellType, columnsStateType, columnSettingsType, DataTableOptions, headerCellType, elementNodeType, textNodeType, renderOptions, rowType} from \"./types\"\nimport {cellToText, joinWithSpaces} from \"./helpers\"\n\n\nexport const headingsToVirtualHeaderRowDOM = (\n    headings,\n    columnSettings,\n    columnsState: columnsStateType,\n    {\n        classes,\n        format,\n        hiddenHeader,\n        sortable,\n        scrollY,\n        type\n    }: DataTableOptions,\n    {\n        noColumnWidths,\n        unhideHeader\n    }: renderOptions\n) => ({\n    nodeName: \"TR\",\n\n    childNodes: headings.map(\n        (heading: headerCellType, index: number) : elementNodeType | void => {\n            const column = columnSettings[index] || ({\n                type,\n                format,\n                sortable: true,\n                searchable: true\n            } as columnSettingsType)\n            if (column.hidden) {\n                return\n            }\n            const attributes : { [key: string]: string } = heading.attributes ? {...heading.attributes} : {}\n            if (column.sortable && sortable && (!scrollY.length || unhideHeader)) {\n                if (column.filter) {\n                    attributes[\"data-filterable\"] = \"true\"\n                } else {\n                    attributes[\"data-sortable\"] = \"true\"\n                }\n            }\n\n            if (column.headerClass) {\n                attributes.class = joinWithSpaces(attributes.class, column.headerClass)\n            }\n            if (columnsState.sort && columnsState.sort.column === index) {\n                const directionClass = columnsState.sort.dir === \"asc\" ? classes.ascending : classes.descending\n                attributes.class = joinWithSpaces(attributes.class, directionClass)\n                attributes[\"aria-sort\"] = columnsState.sort.dir === \"asc\" ? \"ascending\" : \"descending\"\n            } else if (columnsState.filters[index]) {\n                attributes.class = joinWithSpaces(attributes.class, classes.filterActive)\n            }\n\n            if (columnsState.widths[index] && !noColumnWidths) {\n                const style = `width: ${columnsState.widths[index]}%;`\n                attributes.style = joinWithSpaces(attributes.style, style)\n            }\n            if (scrollY.length && !unhideHeader) {\n                const style = \"padding-bottom: 0;padding-top: 0;border: 0;\"\n                attributes.style = joinWithSpaces(attributes.style, style)\n            }\n\n            const headerNodes : elementNodeType[] = heading.type === \"html\" ?\n                heading.data as elementNodeType[] :\n                [\n                    {\n                        nodeName: \"#text\",\n                        data: heading.text ?? String(heading.data)\n                    }\n                ] as textNodeType[]\n            return {\n                nodeName: \"TH\",\n                attributes,\n                childNodes:\n                    ((hiddenHeader || scrollY.length) && !unhideHeader) ?\n                        [\n                            {\n                                nodeName: \"#text\",\n                                data: \"\"\n                            }\n                        ] :\n                        !column.sortable || !sortable ?\n                            headerNodes :\n                            [\n                                {\n                                    nodeName: \"BUTTON\",\n                                    attributes: {\n                                        class: column.filter ? classes.filter : classes.sorter\n                                    },\n                                    childNodes: headerNodes\n                                }\n                            ]\n            }\n        }\n    ).filter((column: (elementNodeType | void)) => column)\n})\n\nexport const dataToVirtualDOM = (tableAttributes: { [key: string]: string}, headings: headerCellType[], rows: rowType[], columnSettings: columnSettingsType[], columnsState: columnsStateType, rowCursor: (number | false), {\n    classes,\n    hiddenHeader,\n    header,\n    footer,\n    format,\n    sortable,\n    scrollY,\n    type,\n    rowRender,\n    tabIndex\n}: DataTableOptions, {\n    noColumnWidths,\n    unhideHeader,\n    renderHeader\n}: renderOptions, footers: elementNodeType[], captions: elementNodeType[]) => {\n    const table: elementNodeType = {\n        nodeName: \"TABLE\",\n        attributes: {...tableAttributes},\n        childNodes: [\n            {\n                nodeName: \"TBODY\",\n                childNodes: rows.map(\n                    ({row, index}) => {\n                        const tr: elementNodeType = {\n                            nodeName: \"TR\",\n                            attributes: {\n                                ...row.attributes,\n                                ...{\n                                    \"data-index\": String(index)\n                                }\n                            },\n                            childNodes: row.cells.map(\n                                (cell: cellType, cIndex: number) => {\n                                    const column = columnSettings[cIndex] || ({\n                                        type,\n                                        format,\n                                        sortable: true,\n                                        searchable: true\n                                    } as columnSettingsType)\n                                    if (column.hidden) {\n                                        return\n                                    }\n                                    const td: elementNodeType = {\n                                        nodeName: \"TD\",\n                                        attributes: cell.attributes ? {...cell.attributes} : {},\n                                        childNodes: column.type === \"html\" ?\n                                            cell.data :\n                                            [\n                                                {\n                                                    nodeName: \"#text\",\n                                                    data: cellToText(cell)\n                                                }\n                                            ]\n                                    } as elementNodeType\n                                    if (!header && !footer && columnsState.widths[cIndex] && !noColumnWidths) {\n                                        td.attributes.style = joinWithSpaces(td.attributes.style, `width: ${columnsState.widths[cIndex]}%;`)\n                                    }\n                                    if (column.cellClass) {\n                                        td.attributes.class = joinWithSpaces(td.attributes.class, column.cellClass)\n                                    }\n                                    if (column.render) {\n                                        const renderedCell : (string | elementNodeType | void) = column.render(cell.data, td, index, cIndex)\n                                        if (renderedCell) {\n                                            if (typeof renderedCell === \"string\") {\n                                                // Convenience method to make it work similarly to what it did up to version 5.\n                                                const node = stringToObj(`<td>${renderedCell}</td>`)\n\n                                                if (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName)) {\n                                                    td.childNodes = node.childNodes\n                                                } else {\n                                                    (td.childNodes[0] as textNodeType).data = renderedCell\n                                                }\n\n                                            } else {\n                                                return renderedCell\n                                            }\n                                        }\n\n                                    }\n                                    return td\n                                }\n                            ).filter((column: (elementNodeType | void)) => column)\n                        }\n                        if (index === rowCursor) {\n                            tr.attributes.class = joinWithSpaces(tr.attributes.class, classes.cursor)\n                        }\n                        if (rowRender) {\n                            const renderedRow : (elementNodeType | void) = rowRender(row, tr, index)\n                            if (renderedRow) {\n                                if (typeof renderedRow === \"string\") {\n                                    // Convenience method to make it work similarly to what it did up to version 5.\n                                    const node = stringToObj(`<tr>${renderedRow}</tr>`)\n                                    if (node.childNodes && (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName))) {\n                                        tr.childNodes = node.childNodes\n                                    } else {\n                                        (tr.childNodes[0] as textNodeType).data = renderedRow\n                                    }\n\n                                } else {\n                                    return renderedRow\n                                }\n                            }\n                        }\n                        return tr\n                    }\n                )\n            } as elementNodeType\n        ]\n    }\n\n    table.attributes.class = joinWithSpaces(table.attributes.class, classes.table)\n\n    if (header || footer || renderHeader) {\n        const headerRow: elementNodeType = headingsToVirtualHeaderRowDOM(headings, columnSettings, columnsState, {classes,\n            hiddenHeader,\n            sortable,\n            scrollY}, {noColumnWidths,\n            unhideHeader})\n\n        if (header || renderHeader) {\n            const thead: elementNodeType = {\n                nodeName: \"THEAD\",\n                childNodes: [headerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                thead.attributes = {\n                    style: \"height: 0px;\"\n                }\n            }\n            table.childNodes.unshift(thead)\n        }\n        if (footer) {\n            const footerRow = header ? structuredClone(headerRow) : headerRow\n            const tfoot: elementNodeType = {\n                nodeName: \"TFOOT\",\n                childNodes: [footerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                tfoot.attributes = {style: \"height: 0px;\"}\n            }\n            table.childNodes.push(tfoot)\n        }\n    }\n\n    footers.forEach(foot => table.childNodes.push(foot))\n    captions.forEach(caption => table.childNodes.push(caption))\n\n    if (tabIndex !== false) {\n        table.attributes.tabindex = String(tabIndex)\n    }\n\n    return table\n}\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));", "!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^-_:/,()\\s\\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(e){var t=h(\"months\"),n=(h(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date(\"\")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));", "import dayjs from \"dayjs\"\nimport customParseFormat from \"dayjs/plugin/customParseFormat\"\n\ndayjs.extend(customParseFormat)\n\n/**\n * Use dayjs to parse cell contents for sorting\n */\nexport const parseDate = (content: string, format: string) => {\n    let date: number | string\n\n    // Converting to YYYYMMDD ensures we can accurately sort the column numerically\n\n    if (format) {\n        switch (format) {\n        case \"ISO_8601\":\n            // ISO8601 is already lexiographically sorted, so we can just sort it as a string.\n            date = content\n            break\n        case \"RFC_2822\":\n            date = dayjs(content.slice(5), \"DD MMM YYYY HH:mm:ss ZZ\").unix()\n            break\n        case \"MYSQL\":\n            date = dayjs(content, \"YYYY-MM-DD hh:mm:ss\").unix()\n            break\n        case \"UNIX\":\n            date = dayjs(content).unix()\n            break\n        // User defined format using the data-format attribute or columns[n].format option\n        default:\n            date = dayjs(content, format, true).valueOf()\n            break\n        }\n    }\n    return date\n}\n", "import {nodeToObj, stringToObj} from \"diff-dom\"\nimport {parseDate} from \"./date\"\nimport {namedNodeMapToObject, objToText} from \"./helpers\"\nimport {\n    cellType,\n    columnSettingsType,\n    DataOption,\n    dataRowType,\n    headerCellType,\n    inputCellType,\n    inputHeaderCellType,\n    inputRowType,\n    nodeType\n} from \"./types\"\n\nexport const readDataCell = (cell: inputCellType, columnSettings : columnSettingsType) : cellType => {\n    if (cell?.constructor === Object && Object.prototype.hasOwnProperty.call(cell, \"data\") && !Object.keys(cell).find(key => !([\"text\", \"order\", \"data\", \"attributes\"].includes(key)))) {\n        return (cell as cellType)\n    }\n    const cellData : cellType = {\n        data: cell\n    }\n    switch (columnSettings.type) {\n    case \"string\":\n        if (!(typeof cell === \"string\")) {\n            cellData.text = String(cellData.data)\n            cellData.order = cellData.text\n        }\n        break\n    case \"date\":\n        if (columnSettings.format) {\n            cellData.order = parseDate(String(cellData.data), columnSettings.format)\n        }\n        break\n    case \"number\":\n        cellData.text = String(cellData.data as number)\n        cellData.data = parseFloat(cellData.data as string)\n        cellData.order = cellData.data\n        break\n    case \"html\": {\n        const node = Array.isArray(cellData.data) ?\n            {nodeName: \"TD\",\n                childNodes: (cellData.data as nodeType[])} : // If it is an array, we assume it is an array of nodeType\n            stringToObj(`<td>${String(cellData.data)}</td>`)\n        cellData.data = node.childNodes || []\n        const text = objToText(node)\n        cellData.text = text\n        cellData.order = text\n        break\n    }\n    case \"boolean\":\n        if (typeof cellData.data === \"string\") {\n            cellData.data = cellData.data.toLowerCase().trim()\n        }\n        cellData.data = ![\"false\", false, null, undefined, 0].includes(cellData.data as (string | number | boolean | null | undefined))\n        cellData.order = cellData.data ? 1 : 0\n        cellData.text = String(cellData.data)\n        break\n    case \"other\":\n        cellData.text = \"\"\n        cellData.order = 0\n        break\n    default:\n        cellData.text = JSON.stringify(cellData.data)\n        break\n    }\n\n    return cellData\n}\n\nconst readDOMDataCell = (cell: HTMLElement, columnSettings : columnSettingsType) : cellType => {\n    let cellData : cellType\n    switch (columnSettings.type) {\n    case \"string\":\n        cellData = {\n            data: cell.innerText\n        }\n        break\n    case \"date\": {\n        const data = cell.innerText\n        cellData = {\n            data,\n            order: parseDate(data, columnSettings.format)\n        }\n        break\n    }\n    case \"number\": {\n        const data = parseFloat(cell.innerText)\n        cellData = {\n            data,\n            order: data,\n            text: cell.innerText\n        }\n        break\n    }\n    case \"boolean\": {\n        const data = ![\"false\", \"0\", \"null\", \"undefined\"].includes(cell.innerText.toLowerCase().trim())\n        cellData = {\n            data,\n            text: data ? \"1\" : \"0\",\n            order: data ? 1 : 0\n        }\n        break\n    }\n    default: { // \"html\", \"other\"\n        const node = nodeToObj(cell, {valueDiffing: false})\n        cellData = {\n            data: node.childNodes || [],\n            text: cell.innerText,\n            order: cell.innerText\n        }\n        break\n    }\n    }\n\n    // Save cell attributes to reference when rendering\n    cellData.attributes = namedNodeMapToObject(cell.attributes)\n\n    return cellData\n}\n\n\nexport const readHeaderCell = (cell: inputHeaderCellType) : headerCellType => {\n    if (\n        cell instanceof Object &&\n        cell.constructor === Object &&\n        cell.hasOwnProperty(\"data\") &&\n        (typeof cell.text === \"string\" || typeof cell.data === \"string\")\n    ) {\n        return cell\n    }\n    const cellData : headerCellType = {\n        data: cell\n    }\n    if (typeof cell === \"string\") {\n        if (cell.length) {\n            const node = stringToObj(`<th>${cell}</th>`)\n            if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n                cellData.data = node.childNodes\n                cellData.type = \"html\"\n                const text = objToText(node)\n                cellData.text = text\n            }\n        }\n\n    } else if ([null, undefined].includes(cell)) {\n        cellData.text = \"\"\n    } else {\n        cellData.text = JSON.stringify(cell)\n    }\n    return cellData\n}\n\nexport const readDOMHeaderCell = (cell: HTMLElement) : headerCellType => {\n    const node = nodeToObj(cell, {valueDiffing: false})\n    let cellData: headerCellType\n    if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n        cellData = {\n            data: node.childNodes,\n            type: \"html\",\n            text: objToText(node)\n        }\n    } else {\n        cellData = {\n            data: cell.innerText,\n            type: \"string\"\n        }\n    }\n\n    // Save header cell attributes to reference when rendering\n    cellData.attributes = node.attributes\n\n    return cellData\n\n}\n\nexport const readTableData = (dataOption: DataOption, dom: (HTMLTableElement | undefined)=undefined, columnSettings, defaultType, defaultFormat) => {\n\n    const data = {\n        data: [] as dataRowType[],\n        headings: [] as headerCellType[]\n    }\n    if (dataOption.headings) {\n        data.headings = dataOption.headings.map((heading: inputHeaderCellType) => readHeaderCell(heading))\n    } else if (dom?.tHead) {\n        data.headings = Array.from(dom.tHead.querySelectorAll(\"th\")).map((th, index) => {\n            const heading = readDOMHeaderCell(th)\n            if (!columnSettings[index]) {\n                columnSettings[index] = {\n                    type: defaultType,\n                    format: defaultFormat,\n                    searchable: true,\n                    sortable: true\n                }\n            }\n            const settings = columnSettings[index]\n            if (th.dataset.sortable?.trim().toLowerCase() === \"false\" || th.dataset.sort?.trim().toLowerCase() === \"false\") {\n                settings.sortable = false\n            }\n            if (th.dataset.searchable?.trim().toLowerCase() === \"false\") {\n                settings.searchable = false\n            }\n            if (th.dataset.hidden?.trim().toLowerCase() === \"true\" || th.getAttribute(\"hidden\")?.trim().toLowerCase() === \"true\") {\n                settings.hidden = true\n            }\n            if ([\"number\", \"string\", \"html\", \"date\", \"boolean\", \"other\"].includes(th.dataset.type)) {\n                settings.type = th.dataset.type\n                if (settings.type === \"date\" && th.dataset.format) {\n                    settings.format = th.dataset.format\n                }\n            }\n            return heading\n        })\n    } else if (dataOption.data?.length) {\n        const firstRow = dataOption.data[0]\n        const firstRowCells = Array.isArray(firstRow) ? firstRow : firstRow.cells\n        data.headings = firstRowCells.map((_cell: inputCellType) => readHeaderCell(\"\"))\n    } else if (dom?.tBodies.length) {\n        data.headings = Array.from(dom.tBodies[0].rows[0].cells).map((_cell: HTMLElement) => readHeaderCell(\"\"))\n    }\n    for (let i=0; i<data.headings.length; i++) {\n        // Make sure that there are settings for all columns\n        if (!columnSettings[i]) {\n            columnSettings[i] = {\n                type: defaultType,\n                format: defaultFormat,\n                sortable: true,\n                searchable: true\n            }\n        }\n    }\n    if (dataOption.data) {\n        const headings = data.headings.map((heading: headerCellType) => heading.data ? String(heading.data) : heading.text)\n        data.data = dataOption.data.map((row: inputRowType | inputCellType[]) => {\n            let attributes: { [key: string]: string }\n            let cells: inputCellType[]\n            if (Array.isArray(row)) {\n                attributes = {}\n                cells = row\n            } else if (row.hasOwnProperty(\"cells\") && Object.keys(row).every(key => [\"cells\", \"attributes\"].includes(key))) {\n                attributes = row.attributes\n                cells = row.cells\n            } else {\n                attributes = {}\n                cells = []\n                Object.entries(row).forEach(([heading, cell]) => {\n                    const index = headings.indexOf(heading)\n                    if (index > -1) {\n                        cells[index] = cell\n                    }\n                })\n            }\n            return {\n                attributes,\n                cells: cells.map((cell: inputCellType, index: number) => readDataCell(cell, columnSettings[index]))\n            } as dataRowType\n        })\n    } else if (dom?.tBodies?.length) {\n        data.data = Array.from(dom.tBodies[0].rows).map(\n            row => ({\n                attributes: namedNodeMapToObject(row.attributes),\n                cells: Array.from(row.cells).map(\n                    (cell, index) => {\n                        const cellData = cell.dataset.content ?\n                            readDataCell(cell.dataset.content, columnSettings[index]) :\n                            readDOMDataCell(cell, columnSettings[index])\n                        if (cell.dataset.order) {\n                            cellData.order = isNaN(parseFloat(cell.dataset.order)) ? cell.dataset.order : parseFloat(cell.dataset.order)\n                        }\n                        return cellData\n\n                    }\n                )\n            } as dataRowType)\n        )\n    }\n\n    if (data.data.length && data.data[0].cells.length !== data.headings.length) {\n        throw new Error(\n            \"Data heading length mismatch.\"\n        )\n    }\n    return data\n}\n", "import {readDataCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {cellType, dataRowType, inputCellType} from \"./types\"\nimport {cellToText, classNamesToSelector} from \"./helpers\"\n\n/**\n * Rows API\n */\nexport class Rows {\n    cursor: (false | number)\n\n    dt: DataTable\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n\n        this.cursor = false\n    }\n\n    setCursor(index: (false | number) = false) {\n        if (index === this.cursor) {\n            return\n        }\n        const oldCursor = this.cursor\n        this.cursor = index\n        this.dt._renderTable()\n        if (index !== false && this.dt.options.scrollY) {\n            const cursorSelector = classNamesToSelector(this.dt.options.classes.cursor)\n            const cursorDOM = this.dt.dom.querySelector(`tr${cursorSelector}`)\n            if (cursorDOM) {\n                cursorDOM.scrollIntoView({block: \"nearest\"})\n            }\n        }\n        this.dt.emit(\"datatable.cursormove\", this.cursor, oldCursor)\n    }\n\n    /**\n     * Add new row\n     */\n    add(data: cellType[]) {\n        if (!Array.isArray(data) || data.length < 1) {\n            return\n        }\n\n        const row: dataRowType = {\n            cells: data.map((cell: cellType, index: number) => {\n                const columnSettings = this.dt.columns.settings[index]\n                return readDataCell(cell, columnSettings)\n            })\n        }\n        this.dt.data.data.push(row)\n        this.dt.hasRows = true\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove row(s)\n     */\n    remove(select: number | number[]) {\n        if (Array.isArray(select)) {\n            this.dt.data.data = this.dt.data.data.filter((_row: dataRowType, index: number) => !select.includes(index))\n            // We may have emptied the table\n            if ( !this.dt.data.data.length ) {\n                this.dt.hasRows = false\n            }\n            this.dt.update(true)\n        } else {\n            return this.remove([select])\n        }\n    }\n\n\n    /**\n     * Find index of row by searching for a value in a column\n     */\n    findRowIndex(columnIndex: number, value: string | boolean | number) {\n        // returns row index of first case-insensitive string match\n        // inside the td innerText at specific column index\n        return this.dt.data.data.findIndex(\n            (row: dataRowType) => {\n                const cell = row.cells[columnIndex]\n                const cellText = cellToText(cell)\n                return cellText.toLowerCase().includes(String(value).toLowerCase())\n            }\n        )\n    }\n\n    /**\n     * Find index, row, and column data by searching for a value in a column\n     */\n    findRow(columnIndex: number, value: string | boolean | number) {\n        // get the row index\n        const index = this.findRowIndex(columnIndex, value)\n        // exit if not found\n        if (index < 0) {\n            return {\n                index: -1,\n                row: null,\n                cols: []\n            }\n        }\n        // get the row from data\n        const row = this.dt.data.data[index]\n        // return innerHTML of each td\n        const cols = row.cells.map((cell: cellType) => cell.data)\n        // return everything\n        return {\n            index,\n            row,\n            cols\n        }\n    }\n\n    /**\n     * Update a row with new data\n     */\n    updateRow(select: number, data: inputCellType[]) {\n        const row: dataRowType = {\n            cells: data.map((cell: inputCellType, index: number) => {\n                const columnSettings = this.dt.columns.settings[index]\n                return readDataCell(cell, columnSettings)\n            })\n        }\n        this.dt.data.data.splice(select, 1, row)\n        this.dt.update(true)\n    }\n}\n", "import {readDataCell, readHeaderCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {\n    cellType,\n    columnSettingsType,\n    columnsStateType,\n    dataRowType,\n    elementNodeType,\n    headerCellType,\n    inputCellType,\n    inputHeaderCellType\n} from \"./types\"\nimport {readColumnSettings} from \"./column_settings\"\nimport {cellToText} from \"./helpers\"\n\n\nexport class Columns {\n    dt: DataTable\n\n    settings: columnSettingsType[]\n\n    _state: columnsStateType\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n        this.init()\n    }\n\n    init() {\n        [this.settings, this._state] = readColumnSettings(this.dt.options.columns, this.dt.options.type, this.dt.options.format)\n    }\n\n    get(column: number) {\n        if (column < 0 || column >= this.size()) {\n            return null\n        }\n        return {...this.settings[column]}\n    }\n\n    size() {\n        return this.settings.length\n    }\n\n    /**\n     * Swap two columns\n     */\n    swap(columns: [number, number]) {\n        if (columns.length === 2) {\n            // Get the current column indexes\n            const cols = this.dt.data.headings.map((_node: headerCellType, index: number) => index)\n\n            const x = columns[0]\n            const y = columns[1]\n            const b = cols[y]\n            cols[y] = cols[x]\n            cols[x] = b\n\n            return this.order(cols)\n        }\n    }\n\n    /**\n     * Reorder the columns\n     */\n    order(columns: number[]) {\n\n        this.dt.data.headings = columns.map((index: number) => this.dt.data.headings[index])\n        this.dt.data.data.forEach(\n            (row: dataRowType) => (row.cells = columns.map((index: number) => row.cells[index]))\n        )\n        this.settings = columns.map(\n            (index: number) => this.settings[index]\n        )\n\n        // Update\n        this.dt.update()\n    }\n\n    /**\n     * Hide columns\n     */\n    hide(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\"\n                }\n            }\n            const column = this.settings[index]\n            column.hidden = true\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Show columns\n     */\n    show(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\",\n                    sortable: true\n                }\n            }\n            const column = this.settings[index]\n            delete column.hidden\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Check column(s) visibility\n     */\n    visible(columns: number | number[] | undefined) {\n\n        if (columns === undefined) {\n            columns = [...Array(this.dt.data.headings.length).keys()]\n        }\n        if (Array.isArray(columns)) {\n            return columns.map(index => !this.settings[index]?.hidden)\n        }\n        return !this.settings[columns]?.hidden\n\n    }\n\n    /**\n     * Add a new column\n     */\n    add(data: {data: inputCellType[], heading: inputHeaderCellType} & columnSettingsType) {\n        const newColumnSelector = this.dt.data.headings.length\n        this.dt.data.headings = this.dt.data.headings.concat([readHeaderCell(data.heading)])\n        this.dt.data.data.forEach((row: dataRowType, index: number) => {\n            row.cells = row.cells.concat([readDataCell(data.data[index], data)])\n        })\n        this.settings[newColumnSelector] = {\n            type: data.type || \"string\",\n            sortable: true,\n            searchable: true\n        }\n        if (data.type || data.format || data.sortable || data.render || data.filter) {\n            const column = this.settings[newColumnSelector]\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (data.ignorePunctuation) {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n        }\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove column(s)\n     */\n    remove(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n\n        this.dt.data.headings = this.dt.data.headings.filter((_heading: headerCellType, index: number) => !columns.includes(index))\n        this.dt.data.data.forEach(\n            (row: dataRowType) => (row.cells = row.cells.filter((_cell: cellType, index: number) => !columns.includes(index)))\n        )\n        this.dt.update(true)\n    }\n\n    /**\n     * Filter by column\n     */\n    filter(column: number, init = false) {\n\n        if (!this.settings[column]?.filter?.length) {\n            // There is no filter to apply.\n            return\n        }\n\n        const currentFilter = this._state.filters[column]\n        let newFilterState\n        if (currentFilter) {\n            let returnNext = false\n            newFilterState = this.settings[column].filter.find((filter: (string | number | boolean | elementNodeType[] | object | ((arg: (string | number | boolean | elementNodeType[] | object)) => boolean))) => {\n                if (returnNext) {\n                    return true\n                }\n                if (filter === currentFilter) {\n                    returnNext = true\n                }\n                return false\n            })\n        } else {\n            const filter = this.settings[column].filter\n            newFilterState = filter ? filter[0] : undefined\n        }\n\n        if (newFilterState) {\n            this._state.filters[column] = newFilterState\n        } else if (currentFilter) {\n            this._state.filters[column] = undefined\n        }\n        this.dt._currentPage = 1\n        this.dt.update()\n\n        if (!init) {\n            this.dt.emit(\"datatable.filter\", column, newFilterState)\n        }\n    }\n\n    /**\n     * Sort by column\n     */\n    sort(index: number, dir: (\"asc\" | \"desc\" | undefined) = undefined, init = false) {\n        const column = this.settings[index]\n\n        if (!init) {\n            this.dt.emit(\"datatable.sorting\", index, dir)\n        }\n\n        if (!dir) {\n            const currentDir = this._state.sort && this._state.sort.column === index ? this._state.sort?.dir : false\n            const sortSequence = column?.sortSequence || [\"asc\", \"desc\"]\n            if (!currentDir) {\n                dir = sortSequence.length ? sortSequence[0] : \"asc\"\n            } else {\n                const currentDirIndex = sortSequence.indexOf(currentDir)\n                if (currentDirIndex === -1) {\n                    dir = sortSequence[0] || \"asc\"\n                } else if (currentDirIndex === sortSequence.length -1) {\n                    dir = sortSequence[0]\n                } else {\n                    dir = sortSequence[currentDirIndex + 1]\n                }\n            }\n\n        }\n\n        const collator = [\"string\", \"html\"].includes(column.type) ?\n            new Intl.Collator(column.locale || this.dt.options.locale, {\n                usage: \"sort\",\n                numeric: column.numeric || this.dt.options.numeric,\n                caseFirst: column.caseFirst || this.dt.options.caseFirst,\n                ignorePunctuation: column.ignorePunctuation|| this.dt.options.ignorePunctuation\n            }) :\n            false\n\n        this.dt.data.data.sort((row1: dataRowType, row2: dataRowType) => {\n            const cell1 = row1.cells[index]\n            const cell2 = row2.cells[index]\n            let order1 = cell1.order ?? cellToText(cell1)\n            let order2 = cell2.order ?? cellToText(cell2)\n            if (dir === \"desc\") {\n                const temp = order1\n                order1 = order2\n                order2 = temp\n            }\n            if (collator) {\n                return collator.compare(String(order1), String(order2))\n            }\n            if (order1 < order2) {\n                return -1\n            } else if (order1 > order2) {\n                return 1\n            }\n            return 0\n        })\n\n        this._state.sort = {column: index,\n            dir}\n        if (this.dt._searchQueries.length) {\n            this.dt.multiSearch(this.dt._searchQueries)\n            this.dt.emit(\"datatable.sort\", index, dir)\n        } else if (!init) {\n            this.dt._currentPage = 1\n            this.dt.update()\n            this.dt.emit(\"datatable.sort\", index, dir)\n        }\n    }\n\n    /**\n     * Measure the actual width of cell content by rendering the entire table with all contents.\n     * Note: Destroys current DOM and therefore requires subsequent dt.update()\n     */\n    _measureWidths() {\n        const activeHeadings = this.dt.data.headings.filter((heading: headerCellType, index: number) => !this.settings[index]?.hidden)\n        if ((this.dt.options.scrollY.length || this.dt.options.fixedColumns) && activeHeadings?.length) {\n\n            this._state.widths = []\n            const renderOptions: {noPaging?: true, noColumnWidths?: true, unhideHeader?: true, renderHeader?: true} = {\n                noPaging: true\n            }\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.dt.options.header || this.dt.options.footer) {\n\n                if (this.dt.options.scrollY.length) {\n                    renderOptions.unhideHeader = true\n                }\n                if (this.dt.headerDOM) {\n                    // Remove headerDOM for accurate measurements\n                    this.dt.headerDOM.parentElement.removeChild(this.dt.headerDOM)\n                }\n\n                // Reset widths\n                renderOptions.noColumnWidths = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings : HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n\n            } else {\n                renderOptions.renderHeader = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings: HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n            }\n            // render table without options for measurements\n            this.dt._renderTable()\n        }\n    }\n}\n", "import {\n    columnsStateType,\n    filterStateType,\n    columnSettingsType\n} from \"./types\"\n\nexport const readColumnSettings = (columnOptions = [], defaultType, defaultFormat) : [columnSettingsType[], columnsStateType] => {\n\n    let columns: (columnSettingsType | undefined)[] = []\n    let sort: (false | {column: number, dir: \"asc\" | \"desc\"}) = false\n    const filters: (filterStateType | undefined )[] = []\n\n    // Check for the columns option\n\n    columnOptions.forEach(data => {\n\n        // convert single column selection to array\n        const columnSelectors = Array.isArray(data.select) ? data.select : [data.select]\n\n        columnSelectors.forEach((selector: number) => {\n            if (columns[selector]) {\n                if (data.type) {\n                    columns[selector].type = data.type\n                }\n            } else {\n                columns[selector] = {\n                    type: data.type || defaultType,\n                    sortable: true,\n                    searchable: true\n                }\n            }\n            const column = columns[selector]\n\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            } else if (data.type === \"date\") {\n                column.format = defaultFormat\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (typeof data.ignorePunctuation !== \"undefined\") {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n\n            if (data.sort) {\n                if (data.filter) {\n                    filters[selector] = data.sort\n                } else {\n                    // We only allow one. The last one will overwrite all other options\n                    sort = {column: selector,\n                        dir: data.sort}\n                }\n            }\n\n            if (typeof data.searchItemSeparator !== \"undefined\") {\n                column.searchItemSeparator = data.searchItemSeparator\n            }\n\n        })\n\n\n    })\n\n    columns = columns.map(column => column ?\n        column :\n        {type: defaultType,\n            format: defaultType === \"date\" ? defaultFormat : undefined,\n            sortable: true,\n            searchable: true})\n\n    const widths = [] // Width are determined later on by measuring on screen.\n\n    return [\n        columns, {filters,\n            sort,\n            widths}\n    ]\n\n}\n", "// Template for custom layouts\nexport const layoutTemplate = (options, dom) => `<div class='${options.classes.top}'>\n    ${\n    options.paging && options.perPageSelect ?\n        `<div class='${options.classes.dropdown}'>\n            <label>\n                <select class='${options.classes.selector}' name=\"per-page\"></select> ${options.labels.perPage}\n            </label>\n        </div>` :\n        \"\"\n}\n    ${\n    options.searchable ?\n        `<div class='${options.classes.search}'>\n            <input class='${options.classes.input}' placeholder='${options.labels.placeholder}' type='search' name=\"search\" title='${options.labels.searchTitle}'${dom.id ? ` aria-controls=\"${dom.id}\"` : \"\"}>\n        </div>` :\n        \"\"\n}\n</div>\n<div class='${options.classes.container}'${options.scrollY.length ? ` style='height: ${options.scrollY}; overflow-Y: auto;'` : \"\"}></div>\n<div class='${options.classes.bottom}'>\n    ${\n    options.paging ?\n        `<div class='${options.classes.info}'></div>` :\n        \"\"\n}\n    <nav class='${options.classes.pagination}'></nav>\n</div>`\n", "import {DataTableConfiguration} from \"./types\"\nimport {layoutTemplate} from \"./templates\"\n/**\n * Default configuration\n */\nexport const defaultConfig: DataTableConfiguration = {\n    // for sorting\n    sortable: true,\n    locale: \"en\",\n    numeric: true,\n    caseFirst: \"false\",\n\n    // for searching\n    searchable: true,\n    sensitivity: \"base\",\n    ignorePunctuation: true,\n    destroyable: true,\n    searchItemSeparator: \"\", // If specified, splits the content of cells up using this separator before performing search.\n    searchQuerySeparator: \" \",\n    searchAnd: false,\n\n    // data\n    data: {},\n    type: \"html\", // Default data type for columns.\n    format: \"YYYY-MM-DD\",\n    columns: [],\n\n    // Pagination\n    paging: true,\n    perPage: 10,\n    perPageSelect: [5, 10, 15, 20, 25],\n    nextPrev: true,\n    firstLast: false,\n    prevText: \"‹\",\n    nextText: \"›\",\n    firstText: \"«\",\n    lastText: \"»\",\n    ellipsisText: \"…\",\n    truncatePager: true,\n    pagerDelta: 2,\n\n    scrollY: \"\",\n\n    fixedColumns: true,\n    fixedHeight: false,\n\n    footer: false,\n    header: true,\n    hiddenHeader: false,\n    caption: undefined,\n\n    rowNavigation: false,\n    tabIndex: false,\n\n    // for overriding rendering\n    pagerRender: false,\n    rowRender: false,\n    tableRender: false,\n    diffDomOptions: {\n        valueDiffing: false\n    },\n\n    // Customise the display text\n    labels: {\n        placeholder: \"Search...\", // The search input placeholder\n        searchTitle: \"Search within table\", // The search input title\n        perPage: \"entries per page\", // per-page dropdown label\n        pageTitle: \"Page {page}\", // page label used in Aria-label\n        noRows: \"No entries found\", // Message shown when there are no records to show\n        noResults: \"No results match your search query\", // Message shown when there are no search results\n        info: \"Showing {start} to {end} of {rows} entries\" //\n    },\n\n    // Customise the layout\n    template: layoutTemplate,\n\n    // Customize the class names used by datatable for different parts\n    classes: {\n        active: \"datatable-active\",\n        ascending: \"datatable-ascending\",\n        bottom: \"datatable-bottom\",\n        container: \"datatable-container\",\n        cursor: \"datatable-cursor\",\n        descending: \"datatable-descending\",\n        disabled: \"datatable-disabled\",\n        dropdown: \"datatable-dropdown\",\n        ellipsis: \"datatable-ellipsis\",\n        filter: \"datatable-filter\",\n        filterActive: \"datatable-filter-active\",\n        empty: \"datatable-empty\",\n        headercontainer: \"datatable-headercontainer\",\n        hidden: \"datatable-hidden\",\n        info: \"datatable-info\",\n        input: \"datatable-input\",\n        loading: \"datatable-loading\",\n        pagination: \"datatable-pagination\",\n        paginationList: \"datatable-pagination-list\",\n        paginationListItem: \"datatable-pagination-list-item\",\n        paginationListItemLink: \"datatable-pagination-list-item-link\",\n        search: \"datatable-search\",\n        selector: \"datatable-selector\",\n        sorter: \"datatable-sorter\",\n        table: \"datatable-table\",\n        top: \"datatable-top\",\n        wrapper: \"datatable-wrapper\"\n    }\n}\n", "import {DataTableConfiguration, elementNodeType} from \"./types\"\n\n/**\n * Pager truncation algorithm\n */\nconst truncate = (paginationListItems: elementNodeType[], currentPage: number, pagesLength: number, options: DataTableConfiguration) : elementNodeType[] => {\n    const pagerDelta = options.pagerDelta\n    const classes = options.classes\n    const ellipsisText = options.ellipsisText\n\n    const doublePagerDelta = 2 * pagerDelta\n    let previousPage = currentPage - pagerDelta\n    let nextPage = currentPage + pagerDelta\n\n    if (currentPage < 4 - pagerDelta + doublePagerDelta) {\n        nextPage = 3 + doublePagerDelta\n    } else if (currentPage > pagesLength - (3 - pagerDelta + doublePagerDelta)) {\n        previousPage = pagesLength - (2 + doublePagerDelta)\n    }\n    const paginationListItemsToModify: elementNodeType[] = []\n    for (let k = 1; k <= pagesLength; k++) {\n        if (1 == k || k == pagesLength || (k >= previousPage && k <= nextPage)) {\n            const li = paginationListItems[k - 1]\n            paginationListItemsToModify.push(li)\n        }\n    }\n    let previousLi: elementNodeType\n    const modifiedLis: elementNodeType[] = []\n    paginationListItemsToModify.forEach(li => {\n        const pageNumber = parseInt((li.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n        if (previousLi) {\n            const previousPageNumber = parseInt((previousLi.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n            if (pageNumber - previousPageNumber == 2) {\n                modifiedLis.push(paginationListItems[previousPageNumber])\n            } else if (pageNumber - previousPageNumber != 1) {\n                const newLi: elementNodeType = {\n                    nodeName: \"LI\",\n                    attributes: {\n                        class: `${classes.paginationListItem} ${classes.ellipsis} ${classes.disabled}`\n                    },\n                    childNodes: [\n                        {\n                            nodeName: \"BUTTON\",\n                            attributes: {\n                                class: classes.paginationListItemLink\n                            },\n                            childNodes: [\n                                {\n                                    nodeName: \"#text\",\n                                    data: ellipsisText\n                                }\n                            ]\n                        }\n                    ]\n                }\n                modifiedLis.push(newLi)\n            }\n        }\n        modifiedLis.push(li)\n        previousLi = li\n    })\n\n    return modifiedLis\n}\n\n\nconst paginationListItem = (page: number, label: string, options: DataTableConfiguration, state: {active?: boolean, hidden?: boolean} = {}) : elementNodeType => ({\n    nodeName: \"LI\",\n    attributes: {\n        class:\n        (state.active && !state.hidden) ?\n            `${options.classes.paginationListItem} ${options.classes.active}` :\n            state.hidden ?\n                `${options.classes.paginationListItem} ${options.classes.hidden} ${options.classes.disabled}` :\n                options.classes.paginationListItem\n    },\n    childNodes: [\n        {\n            nodeName: \"BUTTON\",\n            attributes: {\n                \"data-page\": String(page),\n                class: options.classes.paginationListItemLink,\n                \"aria-label\": options.labels.pageTitle.replace(\"{page}\", String(page))\n            },\n            childNodes: [\n                {\n                    nodeName: \"#text\",\n                    data: label\n                }\n            ]\n        }\n    ]\n})\n\nexport const createVirtualPagerDOM = (onFirstPage: boolean, onLastPage: boolean, currentPage: number, totalPages: number, options) => {\n\n    let pagerListItems : elementNodeType[] = []\n\n    // first button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(1, options.firstText, options))\n    }\n\n    // prev button\n    if (options.nextPrev) {\n        const prev = onFirstPage ? 1 : currentPage - 1\n        pagerListItems.push(paginationListItem(prev, options.prevText, options, {hidden: onFirstPage}))\n    }\n\n    let pages = [...Array(totalPages).keys()].map(index => paginationListItem(index+1, String(index+1), options, {active: (index === (currentPage-1))}))\n\n    if (options.truncatePager) {\n        // truncate the paginationListItems\n        pages = truncate(\n            pages,\n            currentPage,\n            totalPages,\n            options\n        )\n\n    }\n\n    // append the paginationListItems\n    pagerListItems = pagerListItems.concat(pages)\n\n    // next button\n    if (options.nextPrev) {\n        const next = onLastPage ? totalPages : currentPage + 1\n        pagerListItems.push(paginationListItem(next, options.nextText, options, {hidden: onLastPage}))\n    }\n\n    // last button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(totalPages, options.lastText, options))\n    }\n\n    const pager : elementNodeType = {\n        nodeName: \"UL\",\n        attributes: {\n            class: options.classes.paginationList\n        },\n        childNodes: pages.length > 1 ? pagerListItems : [] // Don't show single page\n    }\n\n    return pager\n\n}\n", "import {\n    cellToText,\n    classNamesToSelector,\n    containsClass,\n    createElement,\n    isObject,\n    joinWithSpaces,\n    visibleToColumnIndex\n} from \"./helpers\"\nimport {\n    cellType,\n    DataTableConfiguration,\n    DataTableOptions,\n    dataRowType,\n    filterStateType,\n    headerCellType,\n    inputCellType,\n    inputRowType,\n    elementNodeType,\n    renderOptions,\n    rowType,\n    TableDataType\n} from \"./types\"\nimport {DiffDOM, nodeToObj} from \"diff-dom\"\n\nimport {dataToVirtualDOM, headingsToVirtualHeaderRowDOM} from \"./virtual_dom\"\nimport {readTableData, readDataCell, readHeaderCell} from \"./read_data\"\nimport {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {defaultConfig} from \"./config\"\nimport {createVirtualPagerDOM} from \"./virtual_pager_dom\"\n\n\nexport class DataTable {\n\n    columns: Columns\n\n    containerDOM: HTMLDivElement\n\n    _currentPage: number\n\n    data: TableDataType\n\n    _dd: DiffDOM\n\n    dom: HTMLTableElement\n\n    _events: { [key: string]: ((...args) => void)[]}\n\n    hasHeadings: boolean\n\n    hasRows: boolean\n\n    headerDOM: HTMLDivElement\n\n    _initialHTML: string\n\n    initialized: boolean\n\n    _label: HTMLElement\n\n    lastPage: number\n\n    _listeners: { [key: string]: () => void}\n\n    onFirstPage: boolean\n\n    onLastPage: boolean\n\n    options: DataTableConfiguration\n\n    _pagerDOMs: HTMLElement[]\n\n    _virtualPagerDOM: elementNodeType\n\n    pages: rowType[][]\n\n    _rect: {width: number, height: number}\n\n    rows: Rows\n\n    _searchData: number[]\n\n    _searchQueries: {terms: string[], columns: (number[] | undefined)}[]\n\n    _tableAttributes: {[key: string]: string}\n\n    _tableFooters: elementNodeType[]\n\n    _tableCaptions: elementNodeType[]\n\n    totalPages: number\n\n    _virtualDOM: elementNodeType\n\n    _virtualHeaderDOM: elementNodeType\n\n    wrapperDOM: HTMLElement\n\n    constructor(table: HTMLTableElement | string, options: DataTableOptions = {}) {\n\n        const dom = typeof table === \"string\" ?\n            document.querySelector(table) :\n            table\n        if (dom instanceof HTMLTableElement) {\n            this.dom = dom\n        } else {\n            this.dom = document.createElement(\"table\")\n            dom.appendChild(this.dom)\n        }\n\n        const diffDomOptions = {\n            ...defaultConfig.diffDomOptions,\n            ...options.diffDomOptions\n        }\n\n        const labels = {\n            ...defaultConfig.labels,\n            ...options.labels\n        }\n\n        const classes = {\n            ...defaultConfig.classes,\n            ...options.classes\n        }\n\n        // user options\n        this.options = {\n            ...defaultConfig,\n            ...options,\n            diffDomOptions,\n            labels,\n            classes\n        }\n\n        this._initialHTML = this.options.destroyable ? dom.outerHTML : \"\" // preserve in case of later destruction\n\n        if (this.options.tabIndex) {\n            this.dom.tabIndex = this.options.tabIndex\n        } else if (this.options.rowNavigation && this.dom.tabIndex === -1) {\n            this.dom.tabIndex = 0\n        }\n\n        this._listeners = {\n            onResize: () => this._onResize()\n        }\n\n        this._dd = new DiffDOM(this.options.diffDomOptions || {})\n\n        this.initialized = false\n        this._events = {}\n\n        this._currentPage = 0\n        this.onFirstPage = true\n        this.hasHeadings = false\n        this.hasRows = false\n        this._searchQueries = []\n\n        this.init()\n    }\n\n    /**\n     * Initialize the instance\n     */\n    init() {\n        if (this.initialized || containsClass(this.dom, this.options.classes.table)) {\n            return false\n        }\n\n        this._virtualDOM = nodeToObj(this.dom, this.options.diffDomOptions || {})\n\n        this._tableAttributes = {...this._virtualDOM.attributes}\n        this._tableFooters = this._virtualDOM.childNodes?.filter(node => node.nodeName === \"TFOOT\") ?? []\n        this._tableCaptions = this._virtualDOM.childNodes?.filter(node => node.nodeName === \"CAPTION\") ?? []\n        if (this.options.caption !== undefined) {\n            this._tableCaptions.push({\n                nodeName: \"CAPTION\",\n                childNodes: [\n                    {\n                        nodeName: \"#text\",\n                        data: this.options.caption\n                    }\n                ]\n            })\n        }\n\n        this.rows = new Rows(this)\n        this.columns = new Columns(this)\n\n        this.data = readTableData(this.options.data, this.dom, this.columns.settings, this.options.type, this.options.format)\n\n        this._render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n        }, 10)\n    }\n\n\n    /**\n     * Render the instance\n     */\n    _render() {\n\n        // Build\n        this.wrapperDOM = createElement(\"div\", {\n            class: `${this.options.classes.wrapper} ${this.options.classes.loading}`\n        })\n\n        this.wrapperDOM.innerHTML = this.options.template(this.options, this.dom)\n\n        const selectorClassSelector = classNamesToSelector(this.options.classes.selector)\n        const selector = this.wrapperDOM.querySelector(`select${selectorClassSelector}`)\n\n        // Per Page Select\n        if (selector && this.options.paging && this.options.perPageSelect) {\n\n            // Create the options\n            this.options.perPageSelect.forEach((choice: number | [string, number]) => {\n                const [lab, val] = Array.isArray(choice) ? [choice[0], choice[1]] : [String(choice), choice]\n                const selected = val === this.options.perPage\n                const option = new Option(lab, String(val), selected, selected)\n                selector.appendChild(option)\n            })\n\n        } else if (selector) {\n            selector.parentElement.removeChild(selector)\n        }\n\n        const containerSelector = classNamesToSelector(this.options.classes.container)\n        this.containerDOM = this.wrapperDOM.querySelector(containerSelector)\n\n        this._pagerDOMs = []\n        const paginationSelector = classNamesToSelector(this.options.classes.pagination)\n        Array.from(this.wrapperDOM.querySelectorAll(paginationSelector)).forEach(el => {\n            if (!(el instanceof HTMLElement)) {\n                return\n            }\n            // We remove the inner part of the pager containers to ensure they are all the same.\n            el.innerHTML = `<ul class=\"${this.options.classes.paginationList}\"></ul>`\n            this._pagerDOMs.push(el.firstElementChild as HTMLElement)\n        })\n\n        this._virtualPagerDOM = {\n            nodeName: \"UL\",\n            attributes: {\n                class: this.options.classes.paginationList\n            }\n        }\n\n\n        const infoSelector = classNamesToSelector(this.options.classes.info)\n        this._label = this.wrapperDOM.querySelector(infoSelector)\n\n        // Insert in to DOM tree\n        this.dom.parentElement.replaceChild(this.wrapperDOM, this.dom)\n        this.containerDOM.appendChild(this.dom)\n\n        // Store the table dimensions\n        this._rect = this.dom.getBoundingClientRect()\n\n        // Fix height\n        this._fixHeight()\n\n        // Class names\n        if (!this.options.header) {\n            this.wrapperDOM.classList.add(\"no-header\")\n        }\n\n        if (!this.options.footer) {\n            this.wrapperDOM.classList.add(\"no-footer\")\n        }\n\n        if (this.options.sortable) {\n            this.wrapperDOM.classList.add(\"sortable\")\n        }\n\n        if (this.options.searchable) {\n            this.wrapperDOM.classList.add(\"searchable\")\n        }\n\n        if (this.options.fixedHeight) {\n            this.wrapperDOM.classList.add(\"fixed-height\")\n        }\n\n        if (this.options.fixedColumns) {\n            this.wrapperDOM.classList.add(\"fixed-columns\")\n        }\n\n        this._bindEvents()\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    _renderTable(renderOptions: renderOptions = {}) {\n        let rows: rowType[]\n        const isPaged = (this.options.paging || this._searchQueries.length || this.columns._state.filters.length) && this._currentPage && this.pages.length && !renderOptions.noPaging\n        if (isPaged) {\n            rows = this.pages[this._currentPage - 1]\n        } else {\n            rows = this.data.data.map((row, index) => ({\n                row,\n                index\n            }))\n        }\n\n        let newVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            rows,\n            this.columns.settings,\n            this.columns._state,\n            this.rows.cursor,\n            this.options,\n            renderOptions,\n            this._tableFooters,\n            this._tableCaptions\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"main\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    _renderPage(lastRowCursor=false) {\n        if (this.hasRows && this.totalPages) {\n            if (this._currentPage > this.totalPages) {\n                this._currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            this._renderTable()\n\n            this.onFirstPage = this._currentPage === 1\n            this.onLastPage = this._currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this._currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this._searchQueries.length ? this._searchData.length : this.data.data.length\n        }\n\n        if (this._label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", String(f))\n                .replace(\"{end}\", String(t))\n                .replace(\"{page}\", String(this._currentPage))\n                .replace(\"{pages}\", String(this.totalPages))\n                .replace(\"{rows}\", String(items))\n\n            this._label.innerHTML = items ? string : \"\"\n        }\n\n        if (this._currentPage == 1) {\n            this._fixHeight()\n        }\n\n        if (this.options.rowNavigation && this._currentPage) {\n            if (!this.rows.cursor || !this.pages[this._currentPage-1].find(\n                row => row.index === this.rows.cursor)\n            ) {\n                const rows = this.pages[this._currentPage-1]\n                if (rows.length) {\n                    if (lastRowCursor) {\n                        this.rows.setCursor(rows[rows.length-1].index)\n                    } else {\n                        this.rows.setCursor(rows[0].index)\n                    }\n                }\n            }\n        }\n    }\n\n    /** Render the pager(s)\n     *\n     */\n    _renderPagers() {\n        if (!this.options.paging) {\n            return\n        }\n        let newPagerVirtualDOM = createVirtualPagerDOM(this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages, this.options)\n\n        if (this.options.pagerRender) {\n            const renderedPagerVirtualDOM : (elementNodeType | void) = this.options.pagerRender([this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages], newPagerVirtualDOM)\n            if (renderedPagerVirtualDOM) {\n                newPagerVirtualDOM = renderedPagerVirtualDOM\n            }\n        }\n\n        const diffs = this._dd.diff(this._virtualPagerDOM, newPagerVirtualDOM)\n        // We may have more than one pager\n        this._pagerDOMs.forEach((pagerDOM: HTMLElement) => {\n            this._dd.apply(pagerDOM, diffs)\n        })\n\n        this._virtualPagerDOM = newPagerVirtualDOM\n    }\n\n    // Render header that is not in the same table element as the remainder\n    // of the table. Used for tables with scrollY.\n    _renderSeparateHeader() {\n        const container = this.dom.parentElement\n        if (!this.headerDOM) {\n            this.headerDOM = document.createElement(\"div\")\n            this._virtualHeaderDOM = {\n                nodeName: \"DIV\"\n            }\n\n        }\n        container.parentElement.insertBefore(this.headerDOM, container)\n        let tableVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {unhideHeader: true})\n                    ]\n\n                }\n\n            ]\n        }\n        tableVirtualDOM.attributes.class = joinWithSpaces(tableVirtualDOM.attributes.class, this.options.classes.table)\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, tableVirtualDOM, \"header\")\n            if (renderedTableVirtualDOM) {\n                tableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const newVirtualHeaderDOM = {\n            nodeName: \"DIV\",\n            attributes: {\n                class: this.options.classes.headercontainer\n            },\n            childNodes: [tableVirtualDOM]\n        }\n\n        const diff = this._dd.diff(this._virtualHeaderDOM, newVirtualHeaderDOM)\n        this._dd.apply(this.headerDOM, diff)\n        this._virtualHeaderDOM = newVirtualHeaderDOM\n\n        // Compensate for scrollbars\n        const paddingRight = this.headerDOM.firstElementChild.clientWidth - this.dom.clientWidth\n        if (paddingRight) {\n            const paddedVirtualHeaderDOM = structuredClone(this._virtualHeaderDOM)\n            paddedVirtualHeaderDOM.attributes.style = `padding-right: ${paddingRight}px;`\n            const diff = this._dd.diff(this._virtualHeaderDOM, paddedVirtualHeaderDOM)\n            this._dd.apply(this.headerDOM, diff)\n            this._virtualHeaderDOM = paddedVirtualHeaderDOM\n        }\n\n        if (container.scrollHeight > container.clientHeight) {\n            // scrollbars on one page means scrollbars on all pages.\n            container.style.overflowY = \"scroll\"\n        }\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    _bindEvents() {\n        // Per page selector\n        if (this.options.perPageSelect) {\n            const selectorClassSelector = classNamesToSelector(this.options.classes.selector)\n            const selector = this.wrapperDOM.querySelector(selectorClassSelector)\n            if (selector && selector instanceof HTMLSelectElement) {\n                // Change per page\n                selector.addEventListener(\"change\", () => {\n                    this.options.perPage = parseInt(selector.value, 10)\n                    this.update()\n\n                    this._fixHeight()\n\n                    this.emit(\"datatable.perpage\", this.options.perPage)\n                }, false)\n            }\n        }\n\n        // Search input\n        if (this.options.searchable) {\n            this.wrapperDOM.addEventListener(\"input\", (event: InputEvent) => {\n                const inputSelector = classNamesToSelector(this.options.classes.input)\n                const target = event.target\n                if (!(target instanceof HTMLInputElement) || !target.matches(inputSelector)) {\n                    return\n                }\n                event.preventDefault()\n\n                const searches: { terms: string[], columns: (number[] | undefined) }[] = []\n                const searchFields: HTMLInputElement[] = Array.from(this.wrapperDOM.querySelectorAll(inputSelector))\n                searchFields.filter(\n                    el => el.value.length\n                ).forEach(\n                    el => {\n                        const andSearch = el.dataset.and || this.options.searchAnd\n                        const querySeparator = el.dataset.querySeparator || this.options.searchQuerySeparator\n                        const terms = querySeparator ? el.value.split(this.options.searchQuerySeparator) : [el.value]\n                        if (andSearch) {\n                            terms.forEach(term => {\n                                if (el.dataset.columns) {\n                                    searches.push({\n                                        terms: [term],\n                                        columns: (JSON.parse(el.dataset.columns) as number[])\n                                    })\n                                } else {\n                                    searches.push({terms: [term],\n                                        columns: undefined})\n                                }\n                            })\n                        } else {\n                            if (el.dataset.columns) {\n                                searches.push({\n                                    terms,\n                                    columns: (JSON.parse(el.dataset.columns) as number[])\n                                })\n                            } else {\n                                searches.push({terms,\n                                    columns: undefined})\n                            }\n                        }\n\n                    }\n                )\n                if (searches.length === 1 && searches[0].terms.length === 1) {\n                    const search = searches[0]\n                    this.search(search.terms[0], search.columns)\n                } else {\n                    this.multiSearch(searches)\n                }\n            })\n        }\n\n        // Pager(s) / sorting\n        this.wrapperDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target as Element\n            const hyperlink = target.closest(\"a, button\")\n            if (!hyperlink) {\n                return\n            }\n\n            if (hyperlink.hasAttribute(\"data-page\")) {\n                this.page(parseInt(hyperlink.getAttribute(\"data-page\"), 10))\n                event.preventDefault()\n            } else if (containsClass(hyperlink, this.options.classes.sorter)) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.sort(columnIndex)\n                event.preventDefault()\n            } else if (containsClass(hyperlink, this.options.classes.filter)) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.filter(columnIndex)\n                event.preventDefault()\n            }\n        }, false)\n\n        if (this.options.rowNavigation) {\n            this.dom.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n                if (event.key === \"ArrowUp\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let lastRow: rowType\n                    this.pages[this._currentPage-1].find((row: rowType) => {\n                        if (row.index===this.rows.cursor) {\n                            return true\n                        }\n                        lastRow = row\n                        return false\n                    })\n                    if (lastRow) {\n                        this.rows.setCursor(lastRow.index)\n                    } else if (!this.onFirstPage) {\n                        this.page(this._currentPage-1, true)\n                    }\n                } else if (event.key === \"ArrowDown\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let foundRow: boolean\n                    const nextRow = this.pages[this._currentPage-1].find((row: rowType) => {\n                        if (foundRow) {\n                            return true\n                        }\n                        if (row.index===this.rows.cursor) {\n                            foundRow = true\n                        }\n                        return false\n                    })\n                    if (nextRow) {\n                        this.rows.setCursor(nextRow.index)\n                    } else if (!this.onLastPage) {\n                        this.page(this._currentPage+1)\n                    }\n                } else if ([\"Enter\", \" \"].includes(event.key)) {\n                    this.emit(\"datatable.selectrow\", this.rows.cursor, event)\n                }\n            })\n            this.dom.addEventListener(\"mousedown\", (event: Event) => {\n                const target = event.target\n                if (!(target instanceof Element)) {\n                    return\n                }\n                if (this.dom.matches(\":focus\")) {\n                    const row = Array.from(this.dom.querySelectorAll(\"tbody > tr\")).find(row => row.contains(target))\n                    if (row && row instanceof HTMLElement) {\n                        this.emit(\"datatable.selectrow\", parseInt(row.dataset.index, 10), event)\n                    }\n                }\n\n            })\n        } else {\n            this.dom.addEventListener(\"mousedown\", (event: Event) => {\n                const target = event.target\n                if (!(target instanceof Element)) {\n                    return\n                }\n                const row = Array.from(this.dom.querySelectorAll(\"tbody > tr\")).find(row => row.contains(target))\n                if (row && row instanceof HTMLElement) {\n                    this.emit(\"datatable.selectrow\", parseInt(row.dataset.index, 10), event)\n                }\n            })\n        }\n\n        window.addEventListener(\"resize\", this._listeners.onResize)\n    }\n\n    /**\n     * execute on resize\n     */\n    _onResize() {\n        this._rect = this.containerDOM.getBoundingClientRect()\n        if (!this._rect.width) {\n            // No longer shown, likely no longer part of DOM. Give up.\n            return\n        }\n        this.update(true)\n    }\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        if (!this.options.destroyable) {\n            return\n        }\n        if (this.wrapperDOM.parentElement) {\n            // Restore the initial HTML\n            const oldDOM = createElement(\"div\")\n            oldDOM.innerHTML = this._initialHTML\n            this.wrapperDOM.parentElement.replaceChild(oldDOM.firstElementChild, this.wrapperDOM)\n        } else {\n            // Remove the className\n            this.options.classes.table?.split(\" \").forEach(className => this.wrapperDOM.classList.remove(className))\n        }\n\n        window.removeEventListener(\"resize\", this._listeners.onResize)\n\n        this.initialized = false\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update(measureWidths = false) {\n        if (measureWidths) {\n            this.columns._measureWidths()\n            this.hasRows = Boolean(this.data.data.length)\n            this.hasHeadings = Boolean(this.data.headings.length)\n        }\n        this.options.classes.empty?.split(\" \").forEach(className => this.wrapperDOM.classList.remove(className))\n\n        this._paginate()\n        this._renderPage()\n\n        this._renderPagers()\n\n        if (this.options.scrollY.length) {\n            this._renderSeparateHeader()\n        }\n\n        this.emit(\"datatable.update\")\n    }\n\n    _paginate() {\n        let rows: rowType[] = this.data.data.map((row, index) => ({\n            row,\n            index\n        }))\n\n        if (this._searchQueries.length) {\n            rows = []\n\n            this._searchData.forEach((index: number) => rows.push({index,\n                row: this.data.data[index]}))\n        }\n\n        if (this.columns._state.filters.length) {\n            this.columns._state.filters.forEach(\n                (filterState: (filterStateType | undefined), column: number) => {\n                    if (!filterState) {\n                        return\n                    }\n                    rows = rows.filter(\n                        (row: {index: number, row: dataRowType}) => {\n                            const cell = row.row.cells[column]\n                            return typeof filterState === \"function\" ? filterState(cell.data) : cellToText(cell) === filterState\n                        }\n                    )\n                }\n            )\n        }\n\n        if (this.options.paging && this.options.perPage > 0) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((_row, i: number) => i % this.options.perPage === 0 ? rows.slice(i, i + this.options.perPage) : null)\n                .filter((page: {row: dataRowType, index: number}[]) => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        if (!this._currentPage) {\n            this._currentPage = 1\n        }\n        return this.totalPages\n    }\n\n    /**\n     * Fix the container height\n     */\n    _fixHeight() {\n        if (this.options.fixedHeight) {\n            this.containerDOM.style.height = null\n            this._rect = this.containerDOM.getBoundingClientRect()\n            this.containerDOM.style.height = `${this._rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a simple search of the data set\n     */\n    search(term: string, columns: (number[] | undefined ) = undefined) {\n\n        if (!term.length) {\n            this._currentPage = 1\n            this._searchQueries = []\n            this._searchData = []\n            this.update()\n            this.emit(\"datatable.search\", \"\", [])\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n\n        this.multiSearch([\n            {terms: [term],\n                columns: columns ? columns : undefined}\n        ])\n\n        this.emit(\"datatable.search\", term, this._searchData)\n\n    }\n\n    /**\n     * Perform a search of the data set seraching for up to multiple strings in various columns\n     */\n    multiSearch(rawQueries : {terms: string[], columns: (number[] | undefined)}[]) {\n        if (!this.hasRows) return false\n\n        this._currentPage = 1\n        this._searchData = []\n        // Remove empty queries\n        const queries = rawQueries.map(query => ({\n            columns: query.columns,\n            terms: query.terms.map(term => term.trim()).filter(term => term)\n        })).filter(query => query.terms.length\n        )\n\n        this._searchQueries = queries\n\n        if (!queries.length) {\n            this.update()\n            this.emit(\"datatable.multisearch\", queries, this._searchData)\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n        const queryWords = queries.map(query => this.columns.settings.map(\n            (column, index) => {\n                if (column.hidden || !column.searchable || (query.columns && !query.columns.includes(index))) {\n                    return false\n                }\n                let columnQueries = query.terms\n                const sensitivity = column.sensitivity || this.options.sensitivity\n                if ([\"base\", \"accent\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.toLowerCase())\n                }\n                if ([\"base\", \"case\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\"))\n                }\n                const ignorePunctuation = column.ignorePunctuation ?? this.options.ignorePunctuation\n                if (ignorePunctuation) {\n                    columnQueries = columnQueries.map(query => query.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\"))\n                }\n                return columnQueries\n            }\n        ))\n        this.data.data.forEach((row: dataRowType, idx: number) => {\n            const searchRow = row.cells.map((cell, i) => {\n                let content = cellToText(cell).trim()\n                const column = this.columns.settings[i]\n                if (content.length) {\n                    const sensitivity = column.sensitivity || this.options.sensitivity\n                    if ([\"base\", \"accent\"].includes(sensitivity)) {\n                        content = content.toLowerCase()\n                    }\n                    if ([\"base\", \"case\"].includes(sensitivity)) {\n                        content = content.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n                    }\n                    const ignorePunctuation = column.ignorePunctuation ?? this.options.ignorePunctuation\n                    if (ignorePunctuation) {\n                        content = content.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\")\n                    }\n                }\n                const searchItemSeparator = column.searchItemSeparator || this.options.searchItemSeparator\n                return searchItemSeparator ? content.split(searchItemSeparator) : [content]\n            })\n            if (\n                queryWords.every(\n                    queries => queries.find(\n                        (query, index) => query ?\n                            query.find(queryWord => searchRow[index].find(searchItem => searchItem.includes(queryWord))) :\n                            false\n                    )\n                )\n            ) {\n                this._searchData.push(idx)\n            }\n\n        })\n\n        this.wrapperDOM.classList.add(\"search-results\")\n        if (this._searchData.length) {\n            this.update()\n        } else {\n            this.wrapperDOM.classList.remove(\"search-results\")\n\n            this.setMessage(this.options.labels.noResults)\n        }\n\n        this.emit(\"datatable.multisearch\", queries, this._searchData)\n    }\n\n    /**\n     * Change page\n     */\n    page(page: number, lastRowCursor = false) {\n        // We don't want to load the current page again.\n        if (page === this._currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this._currentPage = page\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this._renderPage(lastRowCursor)\n        this._renderPagers()\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Add new row data\n     */\n    insert(data: (\n        {headings?: string[], data?: (inputRowType | inputCellType[])[]} | { [key: string]: inputCellType}[])) {\n        let rows: dataRowType[] = []\n        if (Array.isArray(data)) {\n            const headings = this.data.headings.map((heading: headerCellType) => heading.data ? String(heading.data) : heading.text)\n            data.forEach((row, rIndex) => {\n                const r: cellType[] = []\n                Object.entries(row).forEach(([heading, cell]) => {\n\n                    const index = headings.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = readDataCell(cell as inputCellType, this.columns.settings[index])\n                    } else if (!this.hasHeadings && !this.hasRows && rIndex === 0) {\n                        r[headings.length] = readDataCell(cell as inputCellType, this.columns.settings[headings.length])\n                        headings.push(heading)\n                        this.data.headings.push(readHeaderCell(heading))\n                    }\n                })\n                rows.push({\n                    cells: r\n                })\n            })\n        } else if (isObject(data)) {\n            if (data.headings && !this.hasHeadings && !this.hasRows) {\n                this.data = readTableData(data, undefined, this.columns.settings, this.options.type, this.options.format)\n            } else if (data.data && Array.isArray(data.data)) {\n                rows = data.data.map(row => {\n                    let attributes: { [key: string]: string }\n                    let cells: inputCellType[]\n                    if (Array.isArray(row)) {\n                        attributes = {}\n                        cells = row\n                    } else {\n                        attributes = row.attributes\n                        cells = row.cells\n                    }\n                    return {\n                        attributes,\n                        cells: cells.map((cell, index) => readDataCell(cell as inputCellType, this.columns.settings[index]))\n                    } as dataRowType\n                })\n            }\n        }\n        if (rows.length) {\n            rows.forEach((row: dataRowType) => this.data.data.push(row))\n        }\n        this.hasHeadings = Boolean(this.data.headings.length)\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    /**\n     * Refresh the instance\n     */\n    refresh() {\n        if (this.options.searchable) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const inputs: HTMLInputElement[] = Array.from(this.wrapperDOM.querySelectorAll(inputSelector))\n            inputs.forEach(el => (el.value = \"\"))\n            this._searchQueries = []\n        }\n        this._currentPage = 1\n        this.onFirstPage = true\n        this.update(true)\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Print the table\n     */\n    print() {\n        const tableDOM = createElement(\"table\")\n        const tableVirtualDOM = {nodeName: \"TABLE\"}\n        let newTableVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            this.data.data.map((row, index) => ({\n                row,\n                index\n            })),\n            this.columns.settings,\n            this.columns._state,\n            false, // No row cursor\n            this.options,\n            {\n                noColumnWidths: true,\n                unhideHeader: true\n            },\n            this._tableFooters,\n            this._tableCaptions\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newTableVirtualDOM, \"print\")\n            if (renderedTableVirtualDOM) {\n                newTableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(tableVirtualDOM, newTableVirtualDOM)\n        this._dd.apply(tableDOM, diff)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(tableDOM)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     */\n    setMessage(message: string) {\n        const activeHeadings = this.data.headings.filter((heading: headerCellType, index: number) => !this.columns.settings[index]?.hidden)\n        const colspan = activeHeadings.length || 1\n\n        this.options.classes.empty?.split(\" \").forEach(className => this.wrapperDOM.classList.add(className))\n\n        if (this._label) {\n            this._label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this._renderPagers()\n\n        let newVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {})\n                    ]\n                },\n                {\n                    nodeName: \"TBODY\",\n                    childNodes: [\n                        {\n                            nodeName: \"TR\",\n                            childNodes: [\n                                {\n                                    nodeName: \"TD\",\n                                    attributes: {\n                                        class: this.options.classes.empty,\n                                        colspan: String(colspan)\n                                    },\n                                    childNodes: [\n                                        {\n                                            nodeName: \"#text\",\n                                            data: message\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n\n            ]\n        }\n\n        this._tableFooters.forEach(footer => newVirtualDOM.childNodes.push(footer))\n        this._tableCaptions.forEach(caption => newVirtualDOM.childNodes.push(caption))\n\n        newVirtualDOM.attributes.class = joinWithSpaces(newVirtualDOM.attributes.class, this.options.classes.table)\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"message\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n\n    }\n\n    /**\n     * Add custom event listener\n     */\n    on(event: string, callback: () => void) {\n        this._events[event] = this._events[event] || []\n        this._events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     */\n    off(event: string, callback: () => void) {\n        if (event in this._events === false) return\n        this._events[event].splice(this._events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     */\n    emit(event: string, ...args) {\n        if (event in this._events === false) return\n        for (let i = 0; i < this._events[event].length; i++) {\n            this._events[event][i](...args)\n        }\n    }\n}\n", "import {\n    isObject\n} from \"../helpers\"\n\ninterface csvConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n\n/**\n * Convert CSV data to fit the format used in the table.\n */\nexport const convertCSV = function(userOptions : csvConvertUserOptions) {\n    let obj\n    const defaults = {\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\",\n        removeDoubleQuotes: false\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length) {\n        // Import CSV\n        obj = {\n            data: []\n        }\n\n        // Split the string into rows\n        const rows : string[] = options.data.split(options.lineDelimiter)\n\n        if (rows.length) {\n\n            if (options.headings) {\n                obj.headings = rows[0].split(options.columnDelimiter)\n                if (options.removeDoubleQuotes) {\n                    obj.headings = obj.headings.map((e: string) => e.trim().replace(/(^\"|\"$)/g, \"\"))\n                }\n                rows.shift()\n            }\n\n            rows.forEach((row: string, i: number) => {\n                obj.data[i] = []\n\n                // Split the rows into values\n                const values = row.split(options.columnDelimiter)\n\n                if (values.length) {\n                    values.forEach((value: string) => {\n                        if (options.removeDoubleQuotes) {\n                            value = value.trim().replace(/(^\"|\"$)/g, \"\")\n                        }\n                        obj.data[i].push(value)\n                    })\n                }\n            })\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n", "import {\n    isJson,\n    isObject\n} from \"../helpers\"\n\ninterface jsonConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n/**\n * Convert JSON data to fit the format used in the table.\n */\nexport const convertJSON = function(userOptions : jsonConvertUserOptions) {\n    let obj\n    const defaults = {\n        data: \"\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length || isObject(options.data)) {\n        // Import JSON\n        const json = isJson(options.data) ? JSON.parse(options.data) : false\n\n        // Valid JSON string\n        if (json) {\n            obj = {\n                headings: [],\n                data: []\n            }\n\n            json.forEach((data: { [key: string]: string | number | boolean | null | undefined}, i: number) => {\n                obj.data[i] = []\n                Object.entries(data).forEach(([column, value]) => {\n                    if (!obj.headings.includes(column)) {\n                        obj.headings.push(column)\n                    }\n                    obj.data[i].push(value)\n                })\n            })\n        } else {\n            console.warn(\"That's not valid JSON!\")\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n", "import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n\n/**\n * Export table to CSV\n */\n\ninterface csvUserOptions {\n  download?: boolean,\n  skipColumn?: number[],\n  lineDelimiter?: string,\n  columnDelimiter?: string,\n  selection?: number | number[],\n  filename?: string,\n}\n\n\nexport const exportCSV = function(dt: DataTable, userOptions: csvUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? header.data)\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    let rows : cellDataType[][] = []\n    // Include headings\n    rows[0] = headers\n    rows = rows.concat(selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    }))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n        rows.forEach(row => {\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(`data:text/csv;charset=utf-8,${str}`)\n            link.download = `${options.filename || \"datatable_export\"}.csv`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n", "import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to JSON\n */\n\n interface jsonUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   replacer?: null | ((key, value) => string) | (string | number)[],\n   space?: number,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportJSON = function(dt: DataTable, userOptions: jsonUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        replacer: null,\n        space: 4\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    const rows: cellDataType[][] = selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    })\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        const arr: (void | { [key: string]: cellDataType})[] = []\n        rows.forEach((row: cellDataType[], x: number) => {\n            arr[x] = arr[x] || {}\n            row.forEach((cell: cellDataType, i: number) => {\n                arr[x][headers[i]] = cell\n            })\n        })\n\n        // Convert the array of objects to JSON string\n        const str = JSON.stringify(arr, options.replacer, options.space)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n\n            const blob = new Blob(\n                [str],\n                {\n                    type: \"data:application/json;charset=utf-8\"\n                }\n            )\n            const url = URL.createObjectURL(blob)\n\n\n            const link = document.createElement(\"a\")\n            link.href = url\n            link.download = `${options.filename || \"datatable_export\"}.json`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n            URL.revokeObjectURL(url)\n        }\n\n        return str\n    }\n\n    return false\n}\n", "import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to SQL\n */\n\n interface sqlUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   tableName?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\nexport const exportSQL = function(dt: DataTable, userOptions : sqlUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        tableName: \"myTable\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    // Selection or whole table\n    let selectedRows: dataRowType[] = []\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    const rows: cellDataType[][] = selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    })\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n    // Only proceed if we have data\n    if (rows.length) {\n        // Begin INSERT statement\n        let str = `INSERT INTO \\`${options.tableName}\\` (`\n\n        // Convert table headings to column names\n        headers.forEach((header: string) => {\n            str += `\\`${header}\\`,`\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Begin VALUES\n        str += \") VALUES \"\n\n        // Iterate rows and convert cell data to column values\n\n        rows.forEach((row: cellDataType[]) => {\n            str += \"(\"\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    str += `\"${cell}\",`\n                } else {\n                    str += `${cell},`\n                }\n            })\n            // Remove trailing comma\n            str = str.trim().substring(0, str.length - 1)\n\n            // end VALUES\n            str += \"),\"\n\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Add trailing colon\n        str += \";\"\n\n        if (options.download) {\n            str = `data:application/sql;charset=utf-8,${str}`\n        }\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.sql`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n", "import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to TXT\n */\n interface txtUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   lineDelimiter?: string,\n   columnDelimiter?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportTXT = function(dt: DataTable, userOptions : txtUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? header.data)\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    let rows : cellDataType[][] = []\n    // Include headings\n    rows[0] = headers\n    rows = rows.concat(selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    }))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n\n        rows.forEach(row => {\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        if (options.download) {\n            str = `data:text/csv;charset=utf-8,${str}`\n        }\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.txt`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n", "/**\n* Default config\n* @type {Object}\n*/\nimport {Editor} from \"./editor\"\n\nexport const defaultConfig = {\n    classes: {\n        row: \"datatable-editor-row\",\n        form: \"datatable-editor-form\",\n        item: \"datatable-editor-item\",\n        menu: \"datatable-editor-menu\",\n        save: \"datatable-editor-save\",\n        block: \"datatable-editor-block\",\n        cancel: \"datatable-editor-cancel\",\n        close: \"datatable-editor-close\",\n        inner: \"datatable-editor-inner\",\n        input: \"datatable-editor-input\",\n        label: \"datatable-editor-label\",\n        modal: \"datatable-editor-modal\",\n        action: \"datatable-editor-action\",\n        header: \"datatable-editor-header\",\n        wrapper: \"datatable-editor-wrapper\",\n        editable: \"datatable-editor-editable\",\n        container: \"datatable-editor-container\",\n        separator: \"datatable-editor-separator\"\n    },\n\n    labels: {\n        closeX: \"x\",\n        editCell: \"Edit Cell\",\n        editRow: \"Edit Row\",\n        removeRow: \"Remove Row\",\n        reallyRemove: \"Are you sure?\",\n        reallyCancel: \"Do you really want to cancel?\",\n        save: \"Save\",\n        cancel: \"Cancel\"\n    },\n\n    cancelModal: editor => confirm(editor.options.labels.reallyCancel),\n\n    // edit inline instead of using a modal lay-over for editing content\n    inline: true,\n\n    // include hidden columns in the editor\n    hiddenColumns: false,\n\n    // enable the context menu\n    contextMenu: true,\n\n    // event to start editing\n    clickEvent: \"dblclick\",\n\n    // indexes of columns not to be edited\n    excludeColumns: [],\n\n    // set the context menu items\n    menuItems: [\n        {\n            text: (editor: Editor) => editor.options.labels.editCell,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const cell = editor.event.target.closest(\"td\")\n                return editor.editCell(cell)\n            }\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.editRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const row = editor.event.target.closest(\"tr\")\n                return editor.editRow(row)\n            }\n        },\n        {\n            separator: true\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.removeRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                if (confirm(editor.options.labels.reallyRemove)) {\n                    const row = editor.event.target.closest(\"tr\")\n                    editor.removeRow(row)\n                }\n            }\n        }\n    ]\n}\n", "import {\n    classNamesToSelector,\n    cellToText,\n    columnToVisibleIndex,\n    createElement,\n    escapeText,\n    visibleToColumnIndex\n} from \"../helpers\"\nimport {\n    cellType,\n    rowRenderType,\n    elementNodeType\n} from \"../types\"\nimport {DataTable} from \"../datatable\"\nimport {parseDate} from \"../date\"\n\nimport {\n    defaultConfig\n} from \"./config\"\nimport {\n    debounce\n} from \"./helpers\"\nimport {menuItemType, dataType, EditorOptions} from \"./types\"\n\n\n/**\n * Main lib\n * @param {Object} dataTable Target dataTable\n * @param {Object} options User config\n */\nexport class Editor {\n    menuOpen: boolean\n\n    containerDOM: HTMLElement\n\n    data: dataType\n\n    disabled: boolean\n\n    dt: DataTable\n\n    editing: boolean\n\n    editingCell: boolean\n\n    editingRow: boolean\n\n    event: Event\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    limits: {x: number, y: number}\n\n    menuDOM: HTMLElement\n\n    modalDOM: HTMLElement | false\n\n    options: EditorOptions\n\n    originalRowRender: rowRenderType | false\n\n    rect: {width: number, height: number}\n\n    wrapperDOM: HTMLElement\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    /**\n     * Init instance\n     * @return {Void}\n     */\n    init() {\n        if (this.initialized) {\n            return\n        }\n        this.options.classes.editable?.split(\" \").forEach(className => this.dt.wrapperDOM.classList.add(className))\n        if (this.options.inline) {\n            this.originalRowRender = this.dt.options.rowRender\n            this.dt.options.rowRender = (row, tr, index) => {\n                let newTr = this.rowRender(row, tr, index)\n                if (this.originalRowRender) {\n                    newTr = this.originalRowRender(row, newTr, index)\n                }\n                return newTr\n            }\n        }\n        if (this.options.contextMenu) {\n            this.containerDOM = createElement(\"div\", {\n                id: this.options.classes.container\n            })\n            this.wrapperDOM = createElement(\"div\", {\n                class: this.options.classes.wrapper\n            })\n            this.menuDOM = createElement(\"ul\", {\n                class: this.options.classes.menu\n            })\n            if (this.options.menuItems && this.options.menuItems.length) {\n                this.options.menuItems.forEach((item: menuItemType) => {\n                    const li = createElement(\"li\", {\n                        class: item.separator ? this.options.classes.separator : this.options.classes.item\n                    })\n                    if (!item.separator) {\n                        const a = createElement(\"a\", {\n                            class: this.options.classes.action,\n                            href: item.url || \"#\",\n                            html: typeof item.text === \"function\" ? item.text(this) : item.text\n                        })\n                        li.appendChild(a)\n                        if (item.action && typeof item.action === \"function\") {\n                            a.addEventListener(\"click\", (event: Event) => {\n                                event.preventDefault()\n                                item.action(this, event)\n                            })\n                        }\n                    }\n                    this.menuDOM.appendChild(li)\n                })\n            }\n            this.wrapperDOM.appendChild(this.menuDOM)\n            this.containerDOM.appendChild(this.wrapperDOM)\n            this.updateMenu()\n        }\n        this.data = {}\n        this.menuOpen = false\n        this.editing = false\n        this.editingRow = false\n        this.editingCell = false\n        this.bindEvents()\n        setTimeout(() => {\n            this.initialized = true\n            this.dt.emit(\"editable.init\")\n        }, 10)\n    }\n\n    /**\n     * Bind events to DOM\n     * @return {Void}\n     */\n    bindEvents() {\n        this.events = {\n            keydown: this.keydown.bind(this),\n            click: this.click.bind(this)\n        }\n        // listen for click / double-click\n        this.dt.dom.addEventListener(this.options.clickEvent, this.events.click)\n        // listen for right-click\n        document.addEventListener(\"keydown\", this.events.keydown)\n\n        if (this.options.contextMenu) {\n            this.events.context = this.context.bind(this)\n            this.events.updateMenu = this.updateMenu.bind(this)\n            this.events.dismissMenu = this.dismissMenu.bind(this)\n            this.events.reset = debounce(() => this.events.updateMenu(), 50)\n\n            // listen for right-click\n            this.dt.dom.addEventListener(\"contextmenu\", this.events.context)\n            // listen for click everywhere except the menu\n            document.addEventListener(\"click\", this.events.dismissMenu)\n            // Reset contextmenu on browser window changes\n            window.addEventListener(\"resize\", this.events.reset)\n            window.addEventListener(\"scroll\", this.events.reset)\n        }\n    }\n\n    /**\n     * contextmenu listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    context(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        const cell = target.closest(\"tbody td\")\n        if (!this.disabled && cell) {\n            event.preventDefault()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n            this.openMenu()\n            this.updateMenu()\n        }\n    }\n\n    /**\n     * dblclick listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        if (this.editing && this.data && this.editingCell) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n            this.saveCell(input.value)\n        } else if (!this.editing) {\n            const cell = target.closest(\"tbody td\") as HTMLTableCellElement\n            if (cell) {\n                this.editCell(cell)\n                event.preventDefault()\n            }\n        }\n    }\n\n    /**\n     * keydown listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    keydown(event: KeyboardEvent) {\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        if (this.modalDOM) {\n            if (event.key === \"Escape\") { // close button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (event.key === \"Enter\") { // save button\n                // Save\n                if (this.editingCell) {\n                    const input = (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else {\n                    const values = (Array.from(this.modalDOM.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]).map(input => input.value.trim())\n                    this.saveRow(values, this.data.row)\n                }\n            }\n        } else if (this.editing && this.data) {\n            if (event.key === \"Enter\") {\n                // Enter key saves\n                if (this.editingCell) {\n                    const input = (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else if (this.editingRow) {\n                    const values = (Array.from(this.dt.wrapperDOM.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]).map(input => input.value.trim())\n                    this.saveRow(values, this.data.row)\n                }\n            } else if (event.key === \"Escape\") {\n                // Escape key reverts\n                if (this.editingCell) {\n                    this.saveCell(this.data.content)\n                } else if (this.editingRow) {\n                    this.saveRow(null, this.data.row)\n                }\n            }\n        }\n    }\n\n    /**\n     * Edit cell\n     * @param  {Object} td    The HTMLTableCellElement\n     * @return {Void}\n     */\n    editCell(td: HTMLTableCellElement) {\n        const columnIndex = visibleToColumnIndex(td.cellIndex, this.dt.columns.settings)\n        if (this.options.excludeColumns.includes(columnIndex)) {\n            this.closeMenu()\n            return\n        }\n        const rowIndex = parseInt(td.parentElement.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        const cell = row.cells[columnIndex]\n\n        this.data = {\n            cell,\n            rowIndex,\n            columnIndex,\n            content: cellToText(cell)\n        }\n        this.editing = true\n        this.editingCell = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editCellModal()\n        }\n        this.closeMenu()\n    }\n\n    editCellModal() {\n        const cell = this.data.cell\n        const columnIndex = this.data.columnIndex\n        const label = this.dt.data.headings[columnIndex].text || String(this.dt.data.headings[columnIndex].data)\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editCell}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n            `<input class='${this.options.classes.input}' value='${escapeText(cellToText(cell))}' type='text'>`,\n            \"</div>\",\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        const input = (modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n        input.focus()\n        input.selectionStart = input.selectionEnd = input.value.length\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                event.preventDefault()\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                event.preventDefault()\n                // Save\n                this.saveCell(input.value)\n            }\n        })\n    }\n\n    /**\n     * Save edited cell\n     * @param  {Object} row    The HTMLTableCellElement\n     * @param  {String} value   Cell content\n     * @return {Void}\n     */\n    saveCell(value: string) {\n        const oldData = this.data.content\n        // Get the type of that column\n        const type = this.dt.columns.settings[this.data.columnIndex].type || this.dt.options.type\n        const stringValue = value.trim()\n        let cell\n        if (type === \"number\") {\n            cell = {data: parseFloat(stringValue)}\n        } else if (type === \"boolean\") {\n            if ([\"\", \"false\", \"0\"].includes(stringValue)) {\n                cell = {data: false,\n                    text: \"false\",\n                    order: 0}\n            } else {\n                cell = {data: true,\n                    text: \"true\",\n                    order: 1}\n            }\n        } else if (type === \"html\") {\n            cell = {data: [\n                {nodeName: \"#text\",\n                    data: value}\n            ],\n            text: value,\n            order: value}\n        } else if (type === \"string\") {\n            cell = {data: value}\n        } else if (type === \"date\") {\n            const format = this.dt.columns.settings[this.data.columnIndex].format || this.dt.options.format\n            cell = {data: value,\n                order: parseDate(String(value), format)}\n        } else {\n            cell = {data: value}\n        }\n        // Set the cell content\n        const row = this.dt.data.data[this.data.rowIndex]\n        row.cells[this.data.columnIndex] = cell\n        this.closeModal()\n        const rowIndex = this.data.rowIndex\n        const columnIndex = this.data.columnIndex\n        this.data = {}\n        this.dt.update(true)\n        this.editing = false\n        this.editingCell = false\n        this.dt.emit(\"editable.save.cell\", value, oldData, rowIndex, columnIndex)\n    }\n\n    /**\n     * Edit row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @return {Void}\n     */\n    editRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const rowIndex = parseInt(tr.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        this.data = {\n            row: row.cells,\n            rowIndex\n        }\n        this.editing = true\n        this.editingRow = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editRowModal()\n        }\n        this.closeMenu()\n    }\n\n    editRowModal() {\n        const row = this.data.row\n\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editRow}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        const inner = modalDOM.firstElementChild\n        if (!inner) {\n            return\n        }\n        const form = inner.lastElementChild?.firstElementChild\n        if (!form) {\n            return\n        }\n        // Add the inputs for each cell\n        row.forEach((cell: cellType, i: number) => {\n            const columnSettings = this.dt.columns.settings[i]\n            if ((!columnSettings.hidden || (columnSettings.hidden && this.options.hiddenColumns)) && !this.options.excludeColumns.includes(i)) {\n                const label = this.dt.data.headings[i].text || String(this.dt.data.headings[i].data)\n                form.insertBefore(createElement(\"div\", {\n                    class: this.options.classes.row,\n                    html: [\n                        `<div class='${this.options.classes.row}'>`,\n                        `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n                        `<input class='${this.options.classes.input}' value='${escapeText(cellToText(cell))}' type='text'>`,\n                        \"</div>\"\n                    ].join(\"\")\n                }), form.lastElementChild)\n            }\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        // Grab the inputs\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        const inputs = Array.from(form.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]\n\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: MouseEvent) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                // Save\n                const values = inputs.map((input: HTMLInputElement) => input.value.trim())\n                this.saveRow(values, this.data.row)\n            }\n        })\n    }\n\n    /**\n     * Save edited row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @param  {Array} data   Cell data\n     * @return {Void}\n     */\n    saveRow(data: string[], row: cellType[]) {\n        // Store the old data for the emitter\n        const oldData = row.map((cell: cellType) => cellToText(cell))\n        const updatedRow = this.dt.data.data[this.data.rowIndex]\n\n        if (data) {\n            let valueCounter = 0\n            updatedRow.cells = row.map((oldItem, colIndex) => {\n                if (this.options.excludeColumns.includes(colIndex) || this.dt.columns.settings[colIndex].hidden) {\n                    return oldItem\n                }\n                const type = this.dt.columns.settings[colIndex].type || this.dt.options.type\n                const value = data[valueCounter++]\n                let cell\n                if (type === \"number\") {\n                    cell = {data: parseFloat(value)}\n                } else if (type === \"boolean\") {\n                    if ([\"\", \"false\", \"0\"].includes(value)) {\n                        cell = {data: false,\n                            text: \"false\",\n                            order: 0}\n                    } else {\n                        cell = {data: true,\n                            text: \"true\",\n                            order: 1}\n                    }\n                } else if (type === \"html\") {\n                    cell = {\n                        data: [\n                            {nodeName: \"#text\",\n                                data: value}\n                        ],\n                        text: value,\n                        order: value\n                    }\n                } else if (type === \"string\") {\n                    cell = {data: value}\n                } else if (type === \"date\") {\n                    const format = this.dt.columns.settings[colIndex].format || this.dt.options.format\n                    cell = {data: value,\n                        order: parseDate(String(value), format)}\n                } else {\n                    cell = {data: value}\n                }\n                return cell\n\n            })\n        }\n\n        const newData = updatedRow.cells.map(cell => cellToText(cell))\n\n        this.data = {}\n        this.dt.update(true)\n        this.closeModal()\n        this.editing = false\n        this.dt.emit(\"editable.save.row\", newData, oldData, row)\n    }\n\n    /**\n     * Open the row editor modal\n     * @return {Void}\n     */\n    openModal() {\n        if (this.modalDOM) {\n            document.body.appendChild(this.modalDOM)\n        }\n    }\n\n    /**\n     * Close the row editor modal\n     * @return {Void}\n     */\n    closeModal() {\n        if (this.editing && this.modalDOM) {\n            document.body.removeChild(this.modalDOM)\n            this.modalDOM = this.editing = this.editingRow = this.editingCell = false\n        }\n    }\n\n    /**\n     * Remove a row\n     * @param  {Object} tr The HTMLTableRowElement\n     * @return {Void}\n     */\n    removeRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const index = parseInt(tr.dataset.index, 10)\n        this.dt.rows.remove(index)\n        this.closeMenu()\n    }\n\n    /**\n     * Update context menu position\n     * @return {Void}\n     */\n    updateMenu() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    /**\n     * Dismiss the context menu\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    dismissMenu(event: Event) {\n        const target = event.target\n        if (!(target instanceof Element) || this.wrapperDOM.contains(target)) {\n            return\n        }\n        let valid = true\n        if (this.editing) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            valid = !(target.matches(`input${inputSelector}[type=text]`))\n        }\n        if (valid) {\n            this.closeMenu()\n        }\n    }\n\n    /**\n     * Open the context menu\n     * @return {Void}\n     */\n    openMenu() {\n        if (this.editing && this.data && this.editingCell) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n\n            this.saveCell(input.value)\n        }\n        document.body.appendChild(this.containerDOM)\n        this.menuOpen = true\n        this.dt.emit(\"editable.context.open\")\n    }\n\n    /**\n     * Close the context menu\n     * @return {Void}\n     */\n    closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"editable.context.close\")\n        }\n    }\n\n    /**\n     * Destroy the instance\n     * @return {Void}\n     */\n    destroy() {\n        this.dt.dom.removeEventListener(this.options.clickEvent, this.events.click)\n        this.dt.dom.removeEventListener(\"contextmenu\", this.events.context)\n        document.removeEventListener(\"click\", this.events.dismissMenu)\n        document.removeEventListener(\"keydown\", this.events.keydown)\n        window.removeEventListener(\"resize\", this.events.reset)\n        window.removeEventListener(\"scroll\", this.events.reset)\n        if (document.body.contains(this.containerDOM)) {\n            document.body.removeChild(this.containerDOM)\n        }\n        if (this.options.inline) {\n            this.dt.options.rowRender = this.originalRowRender\n        }\n        this.initialized = false\n    }\n\n    rowRender(row, tr, index) {\n        if (!this.data || this.data.rowIndex !== index) {\n            return tr\n        }\n\n        if (this.editingCell) {\n            // cell editing\n            const cell = tr.childNodes[columnToVisibleIndex(this.data.columnIndex, this.dt.columns.settings)]\n            cell.childNodes = [\n                {\n                    nodeName: \"INPUT\",\n                    attributes: {\n                        type: \"text\",\n                        value: this.data.content,\n                        class: this.options.classes.input\n                    }\n                }\n            ]\n        } else {\n            // row editing\n\n            // Add the inputs for each cell\n            tr.childNodes.forEach((cell: elementNodeType, i: number) => {\n                const index = visibleToColumnIndex(i, this.dt.columns.settings)\n                const dataCell = row[index]\n                if (!this.options.excludeColumns.includes(index)) {\n                    const cell = tr.childNodes[i]\n                    cell.childNodes = [\n                        {\n                            nodeName: \"INPUT\",\n                            attributes: {\n                                type: \"text\",\n                                value: escapeText(dataCell.text || String(dataCell.data) || \"\"),\n                                class: this.options.classes.input\n                            }\n                        }\n                    ]\n                }\n            })\n\n        }\n        return tr\n\n    }\n}\n\nexport const makeEditable = function(dataTable: DataTable, options = {}) {\n    const editor = new Editor(dataTable, options)\n    if (dataTable.initialized) {\n        editor.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => editor.init())\n    }\n\n    return editor\n}\n", "// Source: https://www.freecodecamp.org/news/javascript-debounce-example/\n\nexport const debounce = function(func: () => void, timeout = 300) {\n    let timer: number\n    return (..._args: any[]) => {\n        clearTimeout(timer)\n        timer = window.setTimeout(() => func(), timeout)\n    }\n}\n", "/**\n* Default config\n* @type {Object}\n*/\n//import {ColumnFilter} from \"./column_filter\"\n\nexport const defaultConfig = {\n    classes: {\n        button: \"datatable-column-filter-button\",\n        menu: \"datatable-column-filter-menu\",\n        container: \"datatable-column-filter-container\",\n        wrapper: \"datatable-column-filter-wrapper\"\n    },\n    labels: {\n        button: \"Filter columns within the table\" // The filter button title\n    },\n    hiddenColumns: []\n}\n", "import {DataTable} from \"../datatable\"\nimport {classNamesToSelector, createElement} from \"../helpers\"\n\nimport {\n    defaultConfig\n} from \"./config\"\n\nimport {ColumnFilterOptions} from \"./types\"\n\nclass ColumnFilter {\n\n    addedButtonDOM: boolean\n\n    menuOpen: boolean\n\n    buttonDOM: HTMLElement\n\n    dt: DataTable\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    options: ColumnFilterOptions\n\n    menuDOM: HTMLElement\n\n    containerDOM: HTMLElement\n\n    wrapperDOM: HTMLElement\n\n    limits: {x: number, y: number}\n\n    rect: {width: number, height: number}\n\n    event: Event\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    init() {\n\n        if (this.initialized) {\n            return\n        }\n\n        const buttonSelector = classNamesToSelector(this.options.classes.button)\n        let buttonDOM : (HTMLElement | null) = this.dt.wrapperDOM.querySelector(buttonSelector)\n        if (!buttonDOM) {\n            buttonDOM = createElement(\n                \"button\",\n                {\n                    class: this.options.classes.button,\n                    html: \"▦\"\n                }\n            )\n            // filter button not part of template (could be default template. We add it to search.)\n            const searchSelector = classNamesToSelector(this.dt.options.classes.search)\n            const searchWrapper = this.dt.wrapperDOM.querySelector(searchSelector)\n            if (searchWrapper) {\n                searchWrapper.appendChild(buttonDOM)\n            } else {\n                this.dt.wrapperDOM.appendChild(buttonDOM)\n            }\n            this.addedButtonDOM = true\n        }\n        this.buttonDOM = buttonDOM\n\n\n        this.containerDOM = createElement(\"div\", {\n            id: this.options.classes.container\n        })\n        this.wrapperDOM = createElement(\"div\", {\n            class: this.options.classes.wrapper\n        })\n        this.menuDOM = createElement(\"ul\", {\n            class: this.options.classes.menu,\n            html: this.dt.data.headings.map(\n                (heading, index) => {\n                    const settings = this.dt.columns.settings[index]\n                    if (this.options.hiddenColumns.includes(index)) {\n                        return \"\"\n                    }\n                    return `<li data-column=\"${index}\">\n                        <input type=\"checkbox\" value=\"${heading.text || heading.data}\" ${settings.hidden ? \"\" : \"checked=''\"}>\n                        <label>\n                            ${heading.text || heading.data}\n                        </label>\n                    </li>`\n                }\n            ).join(\"\")\n        })\n        this.wrapperDOM.appendChild(this.menuDOM)\n        this.containerDOM.appendChild(this.wrapperDOM)\n        this._measureSpace()\n\n        this._bind()\n\n        this.initialized = true\n\n    }\n\n    dismiss() {\n        if (this.addedButtonDOM && this.buttonDOM.parentElement) {\n            this.buttonDOM.parentElement.removeChild(this.buttonDOM)\n        }\n        document.removeEventListener(\"click\", this.events.click)\n    }\n\n    _bind() {\n        this.events = {\n            click: this._click.bind(this)\n        }\n        document.addEventListener(\"click\", this.events.click)\n    }\n\n    _openMenu() {\n        document.body.appendChild(this.containerDOM)\n        this._measureSpace()\n        this.menuOpen = true\n        this.dt.emit(\"columnFilter.menu.open\")\n    }\n\n    _closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"columnFilter.menu.close\")\n        }\n    }\n\n    _measureSpace() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    _click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        if (this.buttonDOM.contains(target)) {\n            event.preventDefault()\n            if (this.menuOpen) {\n                this._closeMenu()\n                return\n            }\n            this._openMenu()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n        } else if (this.menuDOM.contains(target)) {\n            const menuSelector = classNamesToSelector(this.options.classes.menu)\n            const li = target.closest(`${menuSelector} > li`) as HTMLElement\n            if (!li) {\n                return\n            }\n            const checkbox = li.querySelector(\"input[type=checkbox]\") as HTMLInputElement\n            if (!checkbox.contains(target)) {\n                checkbox.checked = !checkbox.checked\n            }\n            const column = Number(li.dataset.column)\n            if (checkbox.checked) {\n                this.dt.columns.show([column])\n            } else {\n                this.dt.columns.hide([column])\n            }\n        } else if (this.menuOpen) {\n            this._closeMenu()\n        }\n    }\n\n}\n\n\nexport const addColumnFilter = function(dataTable: DataTable, options = {}) {\n    const columnFilter = new ColumnFilter(dataTable, options)\n    if (dataTable.initialized) {\n        columnFilter.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => columnFilter.init())\n    }\n\n    return columnFilter\n}\n"],
  "mappings": "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",
  "names": ["isObject", "val", "Object", "prototype", "toString", "call", "isJson", "str", "t", "JSON", "parse", "e", "Array", "isArray", "createElement", "nodeName", "attrs", "dom", "document", "attr", "innerHTML", "setAttribute", "objToText", "obj", "includes", "data", "childNodes", "map", "childNode", "join", "cellToText", "hasOwnProperty", "cell", "text", "String", "escapeText", "replace", "visibleToColumnIndex", "visibleIndex", "columns", "counter", "columnIndex", "hidden", "namedNodeMapToObject", "name", "value", "classNamesToSelector", "classNames", "trim", "split", "className", "containsClass", "element", "classes", "hasMissingClass", "some", "classList", "contains", "joinWithSpaces", "first", "second", "__assign", "assign", "s", "arguments$1", "arguments", "i", "n", "length", "p", "apply", "this", "__spreadArray", "to", "from", "pack", "ar", "l", "slice", "concat", "Diff", "options", "_this", "this", "Object", "entries", "forEach", "_a", "key", "value", "prototype", "toString", "JSON", "stringify", "setValue", "aKey", "aValue", "checkElementType", "element", "arguments$1", "arguments", "elementTypeNames", "_i", "length", "some", "elementTypeName", "_b", "ownerDocument", "defaultView", "objToNode", "objNode", "insideSvg", "node", "nodeName", "document", "createTextNode", "data", "createComment", "createElementNS", "toLowerCase", "createElement", "attributes", "setAttribute", "childNodes", "childNode", "appendChild", "valueDiffing", "checked", "selected", "getFromRoute", "route", "slice", "c", "splice", "applyDiff", "tree", "diff", "newNode", "reference", "action", "_const", "addElement", "addTextElement", "includes", "info", "preDiffApply", "addAttribute", "name", "modifyAttribute", "newValue", "removeAttribute", "modifyTextElement", "textDiff", "oldValue", "parentNode", "modifyValue", "modifyComment", "modifyChecked", "modifySelected", "replaceElement", "namespaceURI", "replaceChild", "relocateGroup", "__spreadArray", "Array", "groupLength", "map", "removeChild", "from", "index", "to", "insertBefore", "removeElement", "parentRoute", "removeTextElement", "nodeType", "console", "log", "postDiffApply", "swap", "obj", "p1", "p2", "tmp", "undoDOM", "diffs", "reverse", "elementDescriptors", "el", "output", "push", "concat", "replace", "id", "findUniqueDescriptors", "li", "uniqueDescriptors", "duplicateDescriptors", "descriptor", "inUnique", "uniqueInBoth", "l1", "l2", "l1Unique", "l2Unique", "inBoth", "keys", "removeDone", "outerDone", "innerDone", "valueDone", "every", "cleanNode", "diffNode", "hasOwnProperty", "call", "elementNode", "__assign", "diffChildNode", "isEqual", "e1", "e2", "Boolean", "e1Attributes", "e2Attributes", "attribute", "roughlyEqual", "sameSiblings", "preventRecursion", "nodeList1", "nodeList2", "childUniqueDescriptors_1", "makeBooleanArray", "n", "v", "markSubTrees", "oldTree", "newTree", "oldChildren", "newChildren", "marked1", "marked2", "subsets", "returnIndex", "foundAllSubsets", "_loop_1", "subset", "c1", "c2", "lcsSize", "c1Length", "c2Length", "matches", "subsetsSame", "i", "c1Desc", "c2Desc", "description", "c1Index", "c1Element", "c2Index", "c2Element", "item", "subsetsAge", "DiffTracker", "list", "add", "apply", "fn", "getFromVirtualRoute", "nodeIndex", "applyVirtual", "routeInfo", "newSubsets", "preVirtualDiffApply", "movedNode", "splitLength", "c_1", "c_2", "filter", "postVirtualDiffApply", "nodeToObj", "aNode", "type", "tagRE", "attrRE", "unescape", "string", "lookup", "area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuItem", "meta", "param", "source", "track", "wbr", "parseTag", "tag", "caseSensitive", "res", "voidElement", "tagMatch", "match", "toUpperCase", "charAt", "startsWith", "endIndex", "indexOf", "reg", "RegExp", "result", "done", "exec", "trim", "attr", "arr", "split", "lastIndex", "substring", "stringToObj", "html", "current", "level", "end", "isOpen", "isComment", "start", "nextChar", "comment", "parent_1", "parent_2", "DiffFinder", "t1Node", "t2Node", "t1", "Element", "parse", "t2", "diffcount", "foundAll", "debug", "t1Orig", "t2Orig", "tracker", "init", "findDiffs", "diffcap", "Error", "findNextDiff", "error", "fdiffs", "maxDepth", "findOuterDiff", "filterOuterDiff", "findInnerDiff", "findValueDiff", "attr1", "attr2", "attrLength", "pos", "Math", "abs", "sort", "t1ChildNodes", "t2ChildNodes", "last", "max", "childNodesLengthDifference", "maxChildCount", "cachedSubtrees", "subtrees", "attemptGroupRelocation", "destinationDifferent", "toGroup", "group", "similarNode", "gapInformation", "stable", "gaps1", "gaps2", "endOld", "endNew", "j", "shortest", "min", "index2", "index1", "testI", "DEFAULT_OPTIONS", "currentValue", "expectedValue", "compress", "window", "components", "DiffDOM", "varNames", "constNames_1", "varName", "undo", "headingsToVirtualHeaderRowDOM", "headings", "columnSettings", "columnsState", "classes", "format", "hiddenHeader", "sortable", "scrollY", "noColumnWidths", "unhideHeader", "heading", "column", "searchable", "hidden", "headerClass", "class", "joinWithSpaces", "directionClass", "dir", "ascending", "descending", "filters", "filterActive", "widths", "style", "headerNodes", "text", "String", "sorter", "dataToVirtualDOM", "tableAttributes", "rows", "rowCursor", "header", "footer", "rowRender", "tabIndex", "renderHeader", "footers", "captions", "table", "row", "tr", "cells", "cell", "cIndex", "td", "cellToText", "cellClass", "render", "renderedCell", "cursor", "renderedRow", "headerRow", "thead", "unshift", "tfoot", "structuredClone", "foot", "caption", "tabindex", "t", "e", "n", "r", "i", "s", "u", "a", "o", "c", "f", "h", "d", "l", "$", "y", "M", "name", "weekdays", "split", "months", "ordinal", "m", "String", "length", "Array", "join", "v", "z", "utcOffset", "Math", "abs", "floor", "date", "year", "month", "clone", "add", "ceil", "p", "w", "D", "ms", "Q", "toLowerCase", "replace", "g", "S", "_", "O", "args", "arguments", "b", "locale", "$L", "utc", "$u", "x", "$x", "$offset", "this", "parse", "prototype", "$d", "Date", "NaN", "test", "match", "substring", "UTC", "init", "$y", "getFullYear", "$M", "getMonth", "$D", "getDate", "$W", "getDay", "$H", "getHours", "$m", "getMinutes", "$s", "getSeconds", "$ms", "getMilliseconds", "$utils", "isValid", "toString", "isSame", "startOf", "endOf", "isAfter", "isBefore", "$g", "set", "unix", "valueOf", "getTime", "toDate", "apply", "slice", "$locale", "weekStart", "$set", "min", "daysInMonth", "get", "Number", "round", "subtract", "format", "invalidDate", "meridiem", "monthsShort", "weekdaysMin", "weekdaysShort", "getTimezoneOffset", "diff", "toJSON", "toISOString", "toUTCString", "k", "forEach", "extend", "$i", "isDayjs", "en", "Ls", "exports", "LTS", "LT", "L", "LL", "LLL", "LLLL", "zone", "offset", "indexOf", "concat", "A", "afternoon", "milliseconds", "SS", "SSS", "ss", "mm", "H", "HH", "hh", "DD", "Do", "day", "MM", "MMM", "map", "Error", "MMMM", "Y", "YY", "YYYY", "Z", "ZZ", "formats", "toUpperCase", "regex", "parser", "exec", "call", "hours", "customParseFormat", "parseTwoDigitYear", "minutes", "seconds", "dayjs", "parseDate", "content", "readDataCell", "cell", "columnSettings", "constructor", "Object", "hasOwnProperty", "keys", "find", "key", "includes", "cellData", "data", "type", "text", "order", "parseFloat", "node", "isArray", "nodeName", "childNodes", "stringToObj", "objToText", "trim", "JSON", "stringify", "readHeaderCell", "undefined", "readTableData", "dataOption", "dom", "defaultType", "defaultFormat", "headings", "heading", "tHead", "from", "querySelectorAll", "th", "index", "nodeToObj", "valueDiffing", "innerText", "attributes", "searchable", "sortable", "settings", "dataset", "sort", "hidden", "getAttribute", "firstRow", "firstRowCells", "cells", "_cell", "tBodies", "rows", "row", "every", "entries", "namedNodeMapToObject", "isNaN", "Rows", "dt", "cursor", "oldCursor", "_renderTable", "options", "scrollY", "cursorSelector", "classNamesToSelector", "classes", "cursorDOM", "querySelector", "scrollIntoView", "block", "emit", "columns", "push", "hasRows", "update", "select", "remove", "filter", "_row", "columnIndex", "value", "findIndex", "cellToText", "findRowIndex", "cols", "splice", "Columns", "_state", "columnOptions", "filters", "selector", "column", "render", "cellClass", "headerClass", "numeric", "caseFirst", "sensitivity", "ignorePunctuation", "sortSequence", "dir", "searchItemSeparator", "widths", "size", "_node", "newColumnSelector", "_heading", "currentFilter", "newFilterState", "returnNext", "_currentPage", "currentDir", "currentDirIndex", "collator", "Intl", "Collator", "usage", "row1", "row2", "cell1", "cell2", "order1", "order2", "temp", "compare", "_searchQueries", "multiSearch", "_measureWidths", "activeHeadings", "fixedColumns", "renderOptions", "noPaging", "header", "footer", "unhideHeader", "headerDOM", "parentElement", "removeChild", "noColumnWidths", "activeDOMHeadings", "firstElementChild", "domCounter", "absoluteColumnWidths", "width", "offsetWidth", "totalOffsetWidth", "reduce", "total", "cellWidth", "renderHeader", "defaultConfig", "destroyable", "searchQuerySeparator", "searchAnd", "paging", "perPage", "perPageSelect", "nextPrev", "firstLast", "prevText", "nextText", "firstText", "lastText", "ellipsisText", "truncatePager", "pagerDelta", "fixedHeight", "hiddenHeader", "caption", "rowNavigation", "tabIndex", "pagerRender", "rowRender", "tableRender", "diffDomOptions", "labels", "placeholder", "searchTitle", "pageTitle", "noRows", "noResults", "info", "template", "top", "dropdown", "search", "input", "id", "container", "bottom", "pagination", "active", "ascending", "descending", "disabled", "ellipsis", "filterActive", "empty", "headercontainer", "loading", "paginationList", "paginationListItem", "paginationListItemLink", "sorter", "table", "wrapper", "page", "label", "state", "class", "createVirtualPagerDOM", "onFirstPage", "onLastPage", "currentPage", "totalPages", "pagerListItems", "prev", "pages", "paginationListItems", "pagesLength", "doublePagerDelta", "previousPage", "nextPage", "paginationListItemsToModify", "li", "previousLi", "modifiedLis", "pageNumber", "parseInt", "previousPageNumber", "newLi", "next", "DataTable", "containerDOM", "_dd", "_events", "hasHeadings", "_initialHTML", "initialized", "_label", "lastPage", "_listeners", "_pagerDOMs", "_virtualPagerDOM", "_rect", "_searchData", "_tableAttributes", "_tableFooters", "_tableCaptions", "_virtualDOM", "_virtualHeaderDOM", "wrapperDOM", "document", "HTMLTableElement", "createElement", "appendChild", "outerHTML", "onResize", "_onResize", "DiffDOM", "containsClass", "_render", "setTimeout", "innerHTML", "selectorClassSelector", "choice", "lab", "val", "selected", "option", "Option", "containerSelector", "paginationSelector", "el", "HTMLElement", "infoSelector", "replaceChild", "getBoundingClientRect", "_fixHeight", "classList", "_bindEvents", "newVirtualDOM", "dataToVirtualDOM", "renderedTableVirtualDOM", "lastRowCursor", "setMessage", "items", "current", "string", "setCursor", "_renderPagers", "newPagerVirtualDOM", "renderedPagerVirtualDOM", "diffs", "pagerDOM", "_renderSeparateHeader", "insertBefore", "tableVirtualDOM", "headingsToVirtualHeaderRowDOM", "joinWithSpaces", "newVirtualHeaderDOM", "paddingRight", "clientWidth", "paddedVirtualHeaderDOM", "structuredClone", "style", "scrollHeight", "clientHeight", "overflowY", "HTMLSelectElement", "addEventListener", "event", "inputSelector", "target", "HTMLInputElement", "matches", "preventDefault", "searches", "andSearch", "and", "terms", "querySeparator", "term", "hyperlink", "closest", "hasAttribute", "visibleIndex", "children", "visibleToColumnIndex", "lastRow", "stopPropagation", "foundRow", "nextRow", "Element", "contains", "window", "destroy", "oldDOM", "className", "removeEventListener", "measureWidths", "Boolean", "_paginate", "_renderPage", "filterState", "height", "rawQueries", "queries", "query", "queryWords", "columnQueries", "normalize", "idx", "searchRow", "queryWord", "searchItem", "rIndex", "isObject", "refresh", "print", "tableDOM", "newTableVirtualDOM", "open", "body", "message", "colspan", "callback", "convertCSV", "userOptions", "obj", "lineDelimiter", "columnDelimiter", "removeDoubleQuotes", "shift", "values", "convertJSON", "json", "isJson", "console", "warn", "exportCSV", "download", "skipColumn", "columnShown", "headers", "selectedRows", "selection", "str", "link", "href", "encodeURI", "filename", "click", "exportJSON", "replacer", "space", "arr", "blob", "Blob", "url", "URL", "createObjectURL", "revokeObjectURL", "exportSQL", "tableName", "exportTXT", "form", "item", "menu", "save", "cancel", "close", "inner", "modal", "action", "editable", "separator", "closeX", "editCell", "editRow", "removeRow", "reallyRemove", "reallyCancel", "cancelModal", "editor", "confirm", "inline", "hiddenColumns", "contextMenu", "clickEvent", "excludeColumns", "menuItems", "_event", "Editor", "dataTable", "menuOpen", "editing", "editingCell", "editingRow", "events", "limits", "menuDOM", "modalDOM", "originalRowRender", "rect", "tr", "newTr", "html", "updateMenu", "bindEvents", "keydown", "bind", "context", "dismissMenu", "reset", "func", "timeout", "timer", "_args", "clearTimeout", "pageX", "pageY", "left", "openMenu", "saveCell", "closeModal", "saveRow", "td", "cellIndex", "closeMenu", "rowIndex", "editCellModal", "escapeText", "openModal", "focus", "selectionStart", "selectionEnd", "oldData", "stringValue", "editRowModal", "lastElementChild", "inputs", "updatedRow", "valueCounter", "oldItem", "colIndex", "newData", "scrollX", "pageXOffset", "pageYOffset", "innerWidth", "innerHeight", "valid", "counter", "dataCell", "makeEditable", "on", "button", "ColumnFilter", "addedButtonDOM", "buttonDOM", "buttonSelector", "searchSelector", "searchWrapper", "_measureSpace", "_bind", "dismiss", "_click", "_openMenu", "_closeMenu", "menuSelector", "checkbox", "checked", "show", "hide", "addColumnFilter", "columnFilter"]
}
